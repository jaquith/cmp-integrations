{"info":{"type":"runner","start":"2020-11-04T11:05:53.131Z","_duration":53485,"cid":"0-0","capabilities":{"teal:capabilityNumber":2,"teal:runCrossBrowser":true,"teal:enableTrace":false,"moz:headless":false,"moz:webdriverClick":true,"selenium:webdriver.remote.quietExceptions":false,"teal:testContext":"<p>A Tealium iQ setup with the <a href=\"https://docs.tealium.com/platforms/javascript/settings/#noview\">noview</a> setting active, where the TiQ operator has failed to edit utag.loader template (misconfiguration case).</p>\n<p>No tags should fire regardless of user choice, this test confirms the opt-out case.</p>","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"teal:showDurations":true,"teal:opRunId":23242,"teal:testTitle":"Standard TiQ Setup, 'utag loader' Template Edit Missing, User Opts Out","teal:opJourneyId":3962,"rotatable":false,"strictFileInteractability":false,"acceptInsecureCerts":true,"teal:enableProxy":true,"moz:profile":"C:\\Users\\sauce\\AppData\\Local\\Temp\\rust_mozprofile7TR7NS","teal:runRemotely":true,"webdriver.remote.sessionid":"fb30c98d-35df-45f5-9afa-f6e85a91d63c","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","moz:useNonSpecCompliantPointerOrigin":false,"platformName":"windows","unhandledPromptBehavior":"dismiss and notify","teal:hasReporterContext":true,"moz:accessibilityChecks":false,"browserName":"firefox","proxy":{"httpProxy":"13.57.103.60:64144","sslProxy":"13.57.103.60:64144","proxyType":"MANUAL"},"platformVersion":"10.0","moz:processID":4516,"moz:shutdownTimeout":60000,"browserVersion":"82.0","teal:hasRunnerContext":true,"teal:enableSauceConnect":false,"timeouts":{"pageLoad":300000,"implicit":0,"script":30000},"teal:opInitialActionId":50975,"moz:geckodriverVersion":"0.27.0","teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:specPath":"tests/specs/examples/usercentrics-v2/noview_no-utag-edit_opt-out.js","setWindowRect":true,"moz:buildID":"20201014125134","pageLoadStrategy":"normal","sessionId":"51252577799f4636a7518351a1041490"},"sanitizedCapabilities":"firefox.82_0.windows","config":{"protocol":"https","hostname":"ondemand.eu-central-1.saucelabs.com","port":443,"path":"/wd/hub","specs":["tests/specs/examples/usercentrics-v2/noview_no-utag-edit_opt-out.js"],"suites":{},"exclude":[],"logLevel":"warn","logLevels":{},"excludeDriverLogs":[],"bail":0,"waitforInterval":500,"waitforTimeout":20000,"framework":"mocha","reporters":["spec",[null,{"outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}}}]],"services":[["sauce"]],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"connectionRetryTimeout":40000,"connectionRetryCount":2,"execArgv":[],"runnerEnv":{},"runner":"local","mochaOpts":{"timeout":67000,"ui":"bdd","color":true,"retries":0,"specFileRetries":0},"jasmineNodeOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[null],"onWorkerStart":[],"before":[null,null],"beforeSession":[null,null],"beforeSuite":[null,null],"beforeHook":[],"beforeTest":[null,null],"beforeCommand":[],"afterCommand":[],"afterTest":[null],"afterHook":[],"afterSuite":[null],"afterSession":[],"after":[null],"onComplete":[null],"onReload":[null],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"specFileRetries":0,"baseUrl":"","user":"caleb.jaquith","key":"6fab5239-14b0-49cf-8488-21839bd22c08","coloredLogs":true,"screenshotPath":"./errorShots/","host":"https://ondemand.eu-central-1.saucelabs.com","region":"eu","capabilities":[{"browserName":"firefox","browserVersion":"latest","platformName":"Windows 10","teal:enableProxy":true,"teal:enableTrace":false,"teal:runCrossBrowser":true,"teal:runRemotely":true,"teal:showDurations":true,"teal:enableSauceConnect":false,"teal:hasReporterContext":true,"teal:hasRunnerContext":true,"teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","teal:capabilityNumber":2,"sauce:options":{},"teal:specPath":"tests/specs/examples/usercentrics-v2/noview_no-utag-edit_opt-out.js","teal:testContext":"<p>A Tealium iQ setup with the <a href=\"https://docs.tealium.com/platforms/javascript/settings/#noview\">noview</a> setting active, where the TiQ operator has failed to edit utag.loader template (misconfiguration case).</p>\n<p>No tags should fire regardless of user choice, this test confirms the opt-out case.</p>","teal:testTitle":"Standard TiQ Setup, 'utag loader' Template Edit Missing, User Opts Out","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"proxy":{"proxyType":"manual","sslProxy":"13.57.103.60:64144","httpProxy":"13.57.103.60:64144"},"acceptInsecureCerts":true,"teal:opJourneyId":3962,"teal:opRunId":23242,"teal:opInitialActionId":50975}],"sauceConnect":false,"ignoredWorkerServices":[],"specFileRetryAttempts":0},"specs":["/Users/calebjaquith/.git/webdriverio-standalone/tests/specs/examples/usercentrics-v2/noview_no-utag-edit_opt-out.js"],"sessionId":"51252577799f4636a7518351a1041490","isMultiremote":false,"retry":0,"failures":0,"retries":0,"end":"2020-11-04T11:06:46.616Z"},"metrics":{"passed":22,"skipped":0,"failed":0,"start":"2020-11-04T11:05:53.131Z","end":"2020-11-04T11:06:46.616Z","duration":53485},"suites":[{"type":"suite","start":"2020-11-04T11:05:53.136Z","_duration":0,"uid":"suite-0-0","cid":"0-0","title":"STEP 1 - initial visit to test page","fullTitle":"STEP 1 - initial visit to test page","tests":[{"type":"test","start":"2020-11-04T11:05:53.137Z","_duration":9286,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html"},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.162},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.162,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120602.174.png"}],"errorIndex":0,"end":"2020-11-04T11:06:02.423Z"},{"type":"test","start":"2020-11-04T11:06:02.430Z","_duration":91,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:02.521Z"},{"type":"test","start":"2020-11-04T11:06:02.522Z","_duration":5915,"uid":"test-00-2","cid":"0-0","title":"should have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":5.749},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":5.749,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3ATNqhGOqVGoTGu1GBshdf65Rz1Gb1yrhl.Rl9DNFyAI1VOGE3iBIpC4%2FnZDaQBnkoyZd3k1ZSBgEI","sameSite":"None","path":"/","httpOnly":true,"secure":false},{"domain":".tealium.net","name":"utag_main","value":"v_id:017592ef64ca0014eec936011d9f0104e005700d00718$_sn:1$_se:1$_ss:1$_st:1604489763853$ses_id:1604487963853%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023963,"sameSite":"None","path":"/","httpOnly":false,"secure":false}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"getCookieByName","result":{"domain":".tealium.net","name":"utag_main","value":"v_id:017592ef64ca0014eec936011d9f0104e005700d00718$_sn:1$_se:1$_ss:1$_st:1604489763853$ses_id:1604487963853%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023963,"sameSite":"None","path":"/","httpOnly":false,"secure":false},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"TiQ will run because we can't detect the edit before load, but no tags should be fired."}],"errorIndex":0,"end":"2020-11-04T11:06:08.437Z"},{"type":"test","start":"2020-11-04T11:06:08.437Z","_duration":313,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0/displayed","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0/displayed","body":{},"result":{"value":true},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0","ELEMENT":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0","ELEMENT":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0"}]},"result":{"value":true},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:08.750Z"},{"type":"test","start":"2020-11-04T11:06:08.751Z","_duration":100,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:08.851Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:05:53.137Z","_duration":9286,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html"},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.162},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.162,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview-no-utag-edit.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120602.174.png"}],"errorIndex":0,"end":"2020-11-04T11:06:02.423Z"},{"type":"test","start":"2020-11-04T11:06:02.430Z","_duration":91,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:02.521Z"},{"type":"test","start":"2020-11-04T11:06:02.522Z","_duration":5915,"uid":"test-00-2","cid":"0-0","title":"should have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":5.749},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":5.749,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3ATNqhGOqVGoTGu1GBshdf65Rz1Gb1yrhl.Rl9DNFyAI1VOGE3iBIpC4%2FnZDaQBnkoyZd3k1ZSBgEI","sameSite":"None","path":"/","httpOnly":true,"secure":false},{"domain":".tealium.net","name":"utag_main","value":"v_id:017592ef64ca0014eec936011d9f0104e005700d00718$_sn:1$_se:1$_ss:1$_st:1604489763853$ses_id:1604487963853%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023963,"sameSite":"None","path":"/","httpOnly":false,"secure":false}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"getCookieByName","result":{"domain":".tealium.net","name":"utag_main","value":"v_id:017592ef64ca0014eec936011d9f0104e005700d00718$_sn:1$_se:1$_ss:1$_st:1604489763853$ses_id:1604487963853%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023963,"sameSite":"None","path":"/","httpOnly":false,"secure":false},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"TiQ will run because we can't detect the edit before load, but no tags should be fired."}],"errorIndex":0,"end":"2020-11-04T11:06:08.437Z"},{"type":"test","start":"2020-11-04T11:06:08.437Z","_duration":313,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0/displayed","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0/displayed","body":{},"result":{"value":true},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0","ELEMENT":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0","ELEMENT":"9ec549e6-dcb9-4ab0-9541-0b5e4d0471f0"}]},"result":{"value":true},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:08.750Z"},{"type":"test","start":"2020-11-04T11:06:08.751Z","_duration":100,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:08.851Z"}],"end":"2020-11-04T11:06:08.851Z","duration":15715},{"type":"suite","start":"2020-11-04T11:06:08.852Z","_duration":0,"uid":"suite-0-1","cid":"0-0","title":"STEP 2 - deny tracking","fullTitle":"STEP 2 - deny tracking","tests":[{"type":"test","start":"2020-11-04T11:06:08.853Z","_duration":5153,"uid":"test-01-0","cid":"0-0","title":"should deny tracking","fullTitle":"STEP 2 - deny tracking should deny tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e14df67c-a242-47e1-8fd8-bfa92db98c07"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/e14df67c-a242-47e1-8fd8-bfa92db98c07/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/e14df67c-a242-47e1-8fd8-bfa92db98c07/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.115},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.115,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:14.006Z"},{"type":"test","start":"2020-11-04T11:06:14.006Z","_duration":501,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - deny tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120614.050.png"}],"errorIndex":0,"end":"2020-11-04T11:06:14.507Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:06:08.853Z","_duration":5153,"uid":"test-01-0","cid":"0-0","title":"should deny tracking","fullTitle":"STEP 2 - deny tracking should deny tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e14df67c-a242-47e1-8fd8-bfa92db98c07"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/e14df67c-a242-47e1-8fd8-bfa92db98c07/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/e14df67c-a242-47e1-8fd8-bfa92db98c07/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.115},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.115,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:14.006Z"},{"type":"test","start":"2020-11-04T11:06:14.006Z","_duration":501,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - deny tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":"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AIBZV30AoCiKklIEAAAAzLrkAEBRFKX2AgAAsywpAAAAAABmmwAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAfZInsAAB3tSURBVAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAAAAAAKiAAAAAAgAoIAAAAAKACAgAAAACogAAgIs6+/M745gnXxQcOvDB2/fgZscO+a+IFrz8qnr7rqnj6rqviBa8/KnbYd03s+vEz4gMHXhjfPOG6OPvyO7tuNgAAACSrMgC46qb18alDLos//sApMbfjisbl6buuij/70GnxqUMui6tuWt91twAAAGCgagKAtbdsiE8dclm89G0ntFr0DysvfdsJ8alDLou1t2zoursAAACwlWUfAFx38wPxrn8+P565++qxLfyXlmfuvjre/bUfxnU3P9B19wEAACAilnEAMD8f8bVjront95jcwn9p2X6P1fH1Y6+J+fmuRwMAAIDaLcsA4Me3bYg/3f/Uzhb+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"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"0a89af12-9f45-4ab0-92f9-51fc320ea442","ELEMENT":"0a89af12-9f45-4ab0-92f9-51fc320ea442"}]},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120614.050.png"}],"errorIndex":0,"end":"2020-11-04T11:06:14.507Z"}],"end":"2020-11-04T11:06:14.507Z","duration":5655},{"type":"suite","start":"2020-11-04T11:06:14.508Z","_duration":0,"uid":"suite-0-2","cid":"0-0","title":"STEP 3 - fire virtual page view by clicking button","fullTitle":"STEP 3 - fire virtual page view by clicking button","tests":[{"type":"test","start":"2020-11-04T11:06:14.508Z","_duration":5161,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"3c97ffa9-1275-40f8-8697-996a1dc5ed5b"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/3c97ffa9-1275-40f8-8697-996a1dc5ed5b/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/3c97ffa9-1275-40f8-8697-996a1dc5ed5b/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.182},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.182,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:19.669Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:06:14.508Z","_duration":5161,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"3c97ffa9-1275-40f8-8697-996a1dc5ed5b"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/3c97ffa9-1275-40f8-8697-996a1dc5ed5b/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/3c97ffa9-1275-40f8-8697-996a1dc5ed5b/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.182},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.182,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:19.669Z"}],"end":"2020-11-04T11:06:19.669Z","duration":5161},{"type":"suite","start":"2020-11-04T11:06:19.669Z","_duration":0,"uid":"suite-0-3","cid":"0-0","title":"STEP 4 - fire virtual page view to tag 10 only by clicking button","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button","tests":[{"type":"test","start":"2020-11-04T11:06:19.669Z","_duration":5224,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9610860a-f7fd-4925-8c50-ed8866d65829"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/9610860a-f7fd-4925-8c50-ed8866d65829/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/9610860a-f7fd-4925-8c50-ed8866d65829/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.212},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.212,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:24.893Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:06:19.669Z","_duration":5224,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9610860a-f7fd-4925-8c50-ed8866d65829"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/9610860a-f7fd-4925-8c50-ed8866d65829/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/9610860a-f7fd-4925-8c50-ed8866d65829/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.212},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.212,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:24.893Z"}],"end":"2020-11-04T11:06:24.893Z","duration":5224},{"type":"suite","start":"2020-11-04T11:06:24.893Z","_duration":0,"uid":"suite-0-4","cid":"0-0","title":"STEP 5 - fire virtual page view to tag 11 only","fullTitle":"STEP 5 - fire virtual page view to tag 11 only","tests":[{"type":"test","start":"2020-11-04T11:06:24.893Z","_duration":5097,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"2b64b1ca-310a-45a3-9a2c-601f3dd08459"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/2b64b1ca-310a-45a3-9a2c-601f3dd08459/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/2b64b1ca-310a-45a3-9a2c-601f3dd08459/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.169},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.169,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:29.990Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:06:24.893Z","_duration":5097,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"2b64b1ca-310a-45a3-9a2c-601f3dd08459"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/2b64b1ca-310a-45a3-9a2c-601f3dd08459/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/2b64b1ca-310a-45a3-9a2c-601f3dd08459/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.169},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.169,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:29.990Z"}],"end":"2020-11-04T11:06:29.990Z","duration":5097},{"type":"suite","start":"2020-11-04T11:06:29.990Z","_duration":0,"uid":"suite-0-5","cid":"0-0","title":"STEP 6 - fire virtual page view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only","tests":[{"type":"test","start":"2020-11-04T11:06:29.991Z","_duration":5045,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"014b2579-aea8-4265-bfd9-5fef82565011"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/014b2579-aea8-4265-bfd9-5fef82565011/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/014b2579-aea8-4265-bfd9-5fef82565011/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.189},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.189,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:35.036Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:06:29.991Z","_duration":5045,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"014b2579-aea8-4265-bfd9-5fef82565011"}},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/014b2579-aea8-4265-bfd9-5fef82565011/click","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/014b2579-aea8-4265-bfd9-5fef82565011/click","body":{},"result":{"value":null},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.189},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.189,"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:35.036Z"}],"end":"2020-11-04T11:06:35.036Z","duration":5046},{"type":"suite","start":"2020-11-04T11:06:35.037Z","_duration":0,"uid":"suite-0-6","cid":"0-0","title":"FINALIZE - get Proxy logs to confirm tag firings","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings","tests":[{"type":"test","start":"2020-11-04T11:06:35.037Z","_duration":10848,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:45.885Z"},{"type":"test","start":"2020-11-04T11:06:45.886Z","_duration":50,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:45.936Z"},{"type":"test","start":"2020-11-04T11:06:45.937Z","_duration":38,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:06:45.975Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:06:35.037Z","_duration":10848,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:45.885Z"},{"type":"test","start":"2020-11-04T11:06:45.886Z","_duration":50,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:45.936Z"},{"type":"test","start":"2020-11-04T11:06:45.937Z","_duration":38,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:06:45.975Z"}],"end":"2020-11-04T11:06:45.975Z","duration":10938},{"type":"suite","start":"2020-11-04T11:06:45.975Z","_duration":0,"uid":"suite-0-7","cid":"0-0","title":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","tests":[{"type":"test","start":"2020-11-04T11:06:45.975Z","_duration":48,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:46.023Z"},{"type":"test","start":"2020-11-04T11:06:46.024Z","_duration":43,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.067Z"},{"type":"test","start":"2020-11-04T11:06:46.067Z","_duration":47,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.114Z"},{"type":"test","start":"2020-11-04T11:06:46.114Z","_duration":43,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.157Z"},{"type":"test","start":"2020-11-04T11:06:46.157Z","_duration":42,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.199Z"},{"type":"test","start":"2020-11-04T11:06:46.200Z","_duration":40,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.240Z"},{"type":"test","start":"2020-11-04T11:06:46.240Z","_duration":50,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.290Z"},{"type":"test","start":"2020-11-04T11:06:46.290Z","_duration":44,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:06:46.334Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:06:45.975Z","_duration":48,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:06:46.023Z"},{"type":"test","start":"2020-11-04T11:06:46.024Z","_duration":43,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.067Z"},{"type":"test","start":"2020-11-04T11:06:46.067Z","_duration":47,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.114Z"},{"type":"test","start":"2020-11-04T11:06:46.114Z","_duration":43,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.157Z"},{"type":"test","start":"2020-11-04T11:06:46.157Z","_duration":42,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.199Z"},{"type":"test","start":"2020-11-04T11:06:46.200Z","_duration":40,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.240Z"},{"type":"test","start":"2020-11-04T11:06:46.240Z","_duration":50,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:06:46.290Z"},{"type":"test","start":"2020-11-04T11:06:46.290Z","_duration":44,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"51252577799f4636a7518351a1041490","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:06:46.334Z"}],"end":"2020-11-04T11:06:46.334Z","duration":359}],"title":"Test Report Title","options":{"stdout":true,"outputDir":"./reports/html-reports/","filename":"report.html","templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"reportTitle":"Test Report Title","options":{"logLevel":"warn","outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}},"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}},"showInBrowser":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{}},"logLevel":"warn","debug":true,"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}}}