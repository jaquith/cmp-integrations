{"info":{"type":"runner","start":"2020-11-04T11:46:43.382Z","_duration":49195,"cid":"0-0","capabilities":{"goog:chromeOptions":{"debuggerAddress":"localhost:49195"},"browserVersion":"86.0.4240.75","timeouts":{"pageLoad":300000,"implicit":0,"script":30000},"strictFileInteractability":false,"acceptInsecureCerts":true,"webauthn:virtualAuthenticators":true,"networkConnectionEnabled":false,"chrome":{"chromedriverVersion":"86.0.4240.22 (398b0743353ff36fb1b82468f63a3a93b4e2e89e-refs/branch-heads/4240@{#378})","userDataDir":"/var/folders/qv/8dr6ylkn3c98dm4r414wh_0h0000kr/T/.com.google.Chrome.ZVNFbg"},"browserName":"chrome","setWindowRect":true,"proxy":{"httpProxy":"13.57.103.60:59127","sslProxy":"13.57.103.60:59127","proxyType":"manual"},"pageLoadStrategy":"normal","platformName":"mac os x","unhandledPromptBehavior":"dismiss and notify","sessionId":"0155c38e54094e6387d728b3ff1ce846"},"sanitizedCapabilities":"chrome.86_0_4240_75.macosx","config":{"protocol":"https","hostname":"ondemand.eu-central-1.saucelabs.com","port":443,"path":"/wd/hub","specs":["tests/specs/examples/usercentrics-v2/nocookie_opt-out.js"],"suites":{},"exclude":[],"logLevel":"warn","logLevels":{},"excludeDriverLogs":[],"bail":0,"waitforInterval":500,"waitforTimeout":20000,"framework":"mocha","reporters":["spec",[null,{"outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}}}]],"services":[["sauce"]],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"connectionRetryTimeout":40000,"connectionRetryCount":2,"execArgv":[],"runnerEnv":{},"runner":"local","mochaOpts":{"timeout":67000,"ui":"bdd","color":true,"retries":0,"specFileRetries":0},"jasmineNodeOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[null],"onWorkerStart":[],"before":[null,null],"beforeSession":[null,null],"beforeSuite":[null,null],"beforeHook":[],"beforeTest":[null,null],"beforeCommand":[],"afterCommand":[],"afterTest":[null],"afterHook":[],"afterSuite":[null],"afterSession":[],"after":[null],"onComplete":[null],"onReload":[null],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"specFileRetries":0,"baseUrl":"","user":"caleb.jaquith","key":"6fab5239-14b0-49cf-8488-21839bd22c08","coloredLogs":true,"screenshotPath":"./errorShots/","host":"https://ondemand.eu-central-1.saucelabs.com","region":"eu","capabilities":[{"browserName":"chrome","browserVersion":"latest","platformName":"macOS 10.15","teal:enableProxy":true,"teal:enableTrace":false,"teal:runCrossBrowser":true,"teal:runRemotely":true,"teal:showDurations":true,"teal:enableSauceConnect":false,"teal:hasReporterContext":true,"teal:hasRunnerContext":true,"teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","teal:capabilityNumber":1,"sauce:options":{},"teal:specPath":"tests/specs/examples/usercentrics-v2/nocookie_opt-out.js","teal:testContext":"<p>A Tealium iQ setup with the <a href=\"https://docs.tealium.com/platforms/javascript/settings/#nocookie\">nocookie</a> setting active and the Usercentrics integration correctly set up.</p>\n<p>User opt-out case.</p>","teal:testTitle":"'nocookie' Setting Active, User Opts Out","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"proxy":{"proxyType":"manual","sslProxy":"13.57.103.60:59127","httpProxy":"13.57.103.60:59127"},"acceptInsecureCerts":true,"teal:opJourneyId":3962,"teal:opRunId":23271,"teal:opInitialActionId":51119}],"sauceConnect":false,"ignoredWorkerServices":[],"specFileRetryAttempts":0},"specs":["/Users/calebjaquith/.git/webdriverio-standalone/tests/specs/examples/usercentrics-v2/nocookie_opt-out.js"],"sessionId":"0155c38e54094e6387d728b3ff1ce846","isMultiremote":false,"retry":0,"failures":0,"retries":0,"end":"2020-11-04T11:47:32.577Z"},"metrics":{"passed":29,"skipped":0,"failed":0,"start":"2020-11-04T11:46:43.382Z","end":"2020-11-04T11:47:32.577Z","duration":49195},"suites":[{"type":"suite","start":"2020-11-04T11:46:43.387Z","_duration":0,"uid":"suite-0-0","cid":"0-0","title":"STEP 1 - initial visit to test page","fullTitle":"STEP 1 - initial visit to test page","tests":[{"type":"test","start":"2020-11-04T11:46:43.388Z","_duration":8577,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html"},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.002},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.002,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-124651.497.png"}],"errorIndex":0,"end":"2020-11-04T11:46:51.966Z"},{"type":"test","start":"2020-11-04T11:46:51.972Z","_duration":95,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:52.068Z"},{"type":"test","start":"2020-11-04T11:46:52.068Z","_duration":5295,"uid":"test-00-2","cid":"0-0","title":"should NOT have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should NOT have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":5.2},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":5.2,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho","path":"/","httpOnly":true,"secure":false}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"getCookieByName","sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:57.363Z"},{"type":"test","start":"2020-11-04T11:46:57.363Z","_duration":271,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        if (element instanceof DocumentFragment) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        return Array.from(element.childNodes).every((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        if (element instanceof DocumentFragment) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        return Array.from(element.childNodes).every((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"result":{"value":true},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"result":{"value":true},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:57.634Z"},{"type":"test","start":"2020-11-04T11:46:57.634Z","_duration":107,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:57.741Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:46:43.388Z","_duration":8577,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html"},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.002},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.002,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-124651.497.png"}],"errorIndex":0,"end":"2020-11-04T11:46:51.966Z"},{"type":"test","start":"2020-11-04T11:46:51.972Z","_duration":95,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:52.068Z"},{"type":"test","start":"2020-11-04T11:46:52.068Z","_duration":5295,"uid":"test-00-2","cid":"0-0","title":"should NOT have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should NOT have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":5.2},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":5.2,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho","path":"/","httpOnly":true,"secure":false}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"getCookieByName","sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:57.363Z"},{"type":"test","start":"2020-11-04T11:46:57.363Z","_duration":271,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        if (element instanceof DocumentFragment) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        return Array.from(element.childNodes).every((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementDisplayed(element) {\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n        switch (node.nodeType) {\n            case Node.ELEMENT_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n                return true;\n            default:\n                return false;\n        }\n    }\n    function parentElementForElement(element) {\n        if (!element) {\n            return null;\n        }\n        return enclosingNodeOrSelfMatchingPredicate(element.parentNode, nodeIsElement);\n    }\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode)\n            if (predicate(node)) {\n                return node;\n            }\n        return null;\n    }\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let element = targetElement; element && element !== targetElement.ownerDocument; element = parentElementForElement(element))\n            if (predicate(element)) {\n                return element;\n            }\n        return null;\n    }\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        if (element instanceof DocumentFragment) {\n            element = element.host;\n        }\n        let computedStyle = window.getComputedStyle(element);\n        let computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n        let parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n    function elementSubtreeHasNonZeroDimensions(element) {\n        let boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            let strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n            return false;\n        });\n    }\n    function elementOverflowsContainer(element) {\n        let cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n        return true;\n    }\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n        if (!element.childNodes.length) {\n            return false;\n        }\n        return Array.from(element.childNodes).every((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    function isElementInsideShadowRoot(element) {\n        if (!element) {\n            return false;\n        }\n        if (element.parentNode && element.parentNode.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(element.parentNode);\n    }\n    if (!isElementInsideShadowRoot(element) && !document.contains(element)) {\n        return false;\n    }\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n        case 'OPTGROUP':\n        case 'OPTION': {\n            let enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n        default:\n            break;\n    }\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n    let hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return Number(cascadedStylePropertyForElement(e, 'opacity')) === 0;\n    });\n    let hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => {\n        return cascadedStylePropertyForElement(e, 'display') === 'none';\n    });\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"result":{"value":true},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8d4169e1-75f7-4683-9406-b849c4b715f4","ELEMENT":"8d4169e1-75f7-4683-9406-b849c4b715f4"}]},"result":{"value":true},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:57.634Z"},{"type":"test","start":"2020-11-04T11:46:57.634Z","_duration":107,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:46:57.741Z"}],"end":"2020-11-04T11:46:57.741Z","duration":14354},{"type":"suite","start":"2020-11-04T11:46:57.743Z","_duration":0,"uid":"suite-0-1","cid":"0-0","title":"STEP 2 - deny tracking","fullTitle":"STEP 2 - deny tracking","tests":[{"type":"test","start":"2020-11-04T11:46:57.744Z","_duration":4884,"uid":"test-01-0","cid":"0-0","title":"should deny tracking","fullTitle":"STEP 2 - deny tracking should deny tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"02729b76-b987-48e5-a3af-ab04a0130703"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/02729b76-b987-48e5-a3af-ab04a0130703/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/02729b76-b987-48e5-a3af-ab04a0130703/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:02.629Z"},{"type":"test","start":"2020-11-04T11:47:02.629Z","_duration":656,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - deny tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-124702.666.png"}],"errorIndex":0,"end":"2020-11-04T11:47:03.285Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:46:57.744Z","_duration":4884,"uid":"test-01-0","cid":"0-0","title":"should deny tracking","fullTitle":"STEP 2 - deny tracking should deny tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"02729b76-b987-48e5-a3af-ab04a0130703"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/02729b76-b987-48e5-a3af-ab04a0130703/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/02729b76-b987-48e5-a3af-ab04a0130703/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:02.629Z"},{"type":"test","start":"2020-11-04T11:47:02.629Z","_duration":656,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - deny tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a","ELEMENT":"39220cf5-c151-4b2b-8c12-ab2d7e7c318a"}]},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-124702.666.png"}],"errorIndex":0,"end":"2020-11-04T11:47:03.285Z"}],"end":"2020-11-04T11:47:03.285Z","duration":5542},{"type":"suite","start":"2020-11-04T11:47:03.286Z","_duration":0,"uid":"suite-0-2","cid":"0-0","title":"STEP 3 - fire virtual page view to tag 10 only by clicking button","fullTitle":"STEP 3 - fire virtual page view to tag 10 only by clicking button","tests":[{"type":"test","start":"2020-11-04T11:47:03.287Z","_duration":4821,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"34fdd52d-ce34-485d-806d-257cac13f8d0"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/34fdd52d-ce34-485d-806d-257cac13f8d0/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/34fdd52d-ce34-485d-806d-257cac13f8d0/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.001},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.001,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:08.108Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:47:03.287Z","_duration":4821,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"34fdd52d-ce34-485d-806d-257cac13f8d0"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/34fdd52d-ce34-485d-806d-257cac13f8d0/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/34fdd52d-ce34-485d-806d-257cac13f8d0/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.001},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.001,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:08.108Z"}],"end":"2020-11-04T11:47:08.108Z","duration":4822},{"type":"suite","start":"2020-11-04T11:47:08.109Z","_duration":0,"uid":"suite-0-3","cid":"0-0","title":"STEP 4 - fire virtual page view by clicking button","fullTitle":"STEP 4 - fire virtual page view by clicking button","tests":[{"type":"test","start":"2020-11-04T11:47:08.109Z","_duration":5063,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"c5ce737d-6741-4706-ae3f-ebec1275089e"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/c5ce737d-6741-4706-ae3f-ebec1275089e/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/c5ce737d-6741-4706-ae3f-ebec1275089e/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.003},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.003,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:13.172Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:47:08.109Z","_duration":5063,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"c5ce737d-6741-4706-ae3f-ebec1275089e"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/c5ce737d-6741-4706-ae3f-ebec1275089e/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/c5ce737d-6741-4706-ae3f-ebec1275089e/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.003},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.003,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:13.172Z"}],"end":"2020-11-04T11:47:13.172Z","duration":5063},{"type":"suite","start":"2020-11-04T11:47:13.172Z","_duration":0,"uid":"suite-0-4","cid":"0-0","title":"STEP 5 - fire virtual page view to tag 11 only","fullTitle":"STEP 5 - fire virtual page view to tag 11 only","tests":[{"type":"test","start":"2020-11-04T11:47:13.172Z","_duration":4762,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"205242a2-ed09-411e-a68d-6c1083f699b2"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/205242a2-ed09-411e-a68d-6c1083f699b2/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/205242a2-ed09-411e-a68d-6c1083f699b2/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.003},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.003,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:17.935Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:47:13.172Z","_duration":4762,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"205242a2-ed09-411e-a68d-6c1083f699b2"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/205242a2-ed09-411e-a68d-6c1083f699b2/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/205242a2-ed09-411e-a68d-6c1083f699b2/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.003},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.003,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:17.935Z"}],"end":"2020-11-04T11:47:17.935Z","duration":4763},{"type":"suite","start":"2020-11-04T11:47:17.935Z","_duration":0,"uid":"suite-0-5","cid":"0-0","title":"STEP 6 - fire virtual page view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only","tests":[{"type":"test","start":"2020-11-04T11:47:17.935Z","_duration":4768,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"1689717e-032d-483e-a3af-8e9ba52751d5"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/1689717e-032d-483e-a3af-8e9ba52751d5/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/1689717e-032d-483e-a3af-8e9ba52751d5/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.002},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.002,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:22.703Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:47:17.935Z","_duration":4768,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"1689717e-032d-483e-a3af-8e9ba52751d5"}},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/1689717e-032d-483e-a3af-8e9ba52751d5/click","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/1689717e-032d-483e-a3af-8e9ba52751d5/click","body":{},"result":{"value":null},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.002},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.002,"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:22.703Z"}],"end":"2020-11-04T11:47:22.703Z","duration":4768},{"type":"suite","start":"2020-11-04T11:47:22.703Z","_duration":0,"uid":"suite-0-6","cid":"0-0","title":"FINALIZE - get Proxy logs to confirm tag firings","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings","tests":[{"type":"test","start":"2020-11-04T11:47:22.703Z","_duration":8821,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.524Z"},{"type":"test","start":"2020-11-04T11:47:31.524Z","_duration":44,"uid":"test-06-1","cid":"0-0","title":"basic log validation","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - basic log validation","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - basic log validation","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.568Z"},{"type":"test","start":"2020-11-04T11:47:31.568Z","_duration":41,"uid":"test-06-2","cid":"0-0","title":"verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - verify step creation in LiveConnect","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.609Z"},{"type":"test","start":"2020-11-04T11:47:31.609Z","_duration":38,"uid":"test-06-3","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [\n    {\n      \"timestamp\": 1604490414348,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.6363684494647108\",\n      \"id\": \"415a4264-aca2-47fa-8d49-6fe0d4d2197e\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.3 AM\",\n        \"Load Time\": \"0.161 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.1 AM - 11:46:54.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.6363684494647108\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    },\n    {\n      \"timestamp\": 1604490414504,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.8512933857700564\",\n      \"id\": \"9af15b11-e4da-4d45-abfc-42594576baa1\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.5 AM - 11:46:54.5 AM\",\n        \"Load Time\": \"0.147 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.5 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.8512933857700564\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    },\n    {\n      \"timestamp\": 1604490430201,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.25100606712438434\",\n      \"id\": \"42e9a588-13ff-4e97-8994-90d42310e202\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.1 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.1 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.25100606712438434\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    },\n    {\n      \"timestamp\": 1604490430207,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.5507051870390367\",\n      \"id\": \"88c6d39f-93f0-4d04-93f1-946911b7057d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.2 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.165 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.2 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.5507051870390367\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    },\n    {\n      \"timestamp\": 1604490439717,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.08677488124617039\",\n      \"id\": \"d7208bb3-db49-4d55-935d-25a4856aaa9d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:19.7 AM - 11:47:19.7 AM\",\n        \"Load Time\": \"0.150 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:19 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:19 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51124,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:19.5 AM - 11:47:19.7 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.08677488124617039\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step6\"\n    }\n  ],\n  \"step1\": [\n    {\n      \"timestamp\": 1604490414348,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.6363684494647108\",\n      \"id\": \"415a4264-aca2-47fa-8d49-6fe0d4d2197e\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.3 AM\",\n        \"Load Time\": \"0.161 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.1 AM - 11:46:54.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.6363684494647108\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    },\n    {\n      \"timestamp\": 1604490414504,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.8512933857700564\",\n      \"id\": \"9af15b11-e4da-4d45-abfc-42594576baa1\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.5 AM - 11:46:54.5 AM\",\n        \"Load Time\": \"0.147 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.5 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.8512933857700564\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    }\n  ],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [\n    {\n      \"timestamp\": 1604490430201,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.25100606712438434\",\n      \"id\": \"42e9a588-13ff-4e97-8994-90d42310e202\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.1 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.1 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.25100606712438434\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    },\n    {\n      \"timestamp\": 1604490430207,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.5507051870390367\",\n      \"id\": \"88c6d39f-93f0-4d04-93f1-946911b7057d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.2 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.165 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.2 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.5507051870390367\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    }\n  ],\n  \"step5\": [],\n  \"step6\": [\n    {\n      \"timestamp\": 1604490439717,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.08677488124617039\",\n      \"id\": \"d7208bb3-db49-4d55-935d-25a4856aaa9d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:19.7 AM - 11:47:19.7 AM\",\n        \"Load Time\": \"0.150 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:19 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:19 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51124,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:19.5 AM - 11:47:19.7 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.08677488124617039\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step6\"\n    }\n  ]\n}"}],"errorIndex":0,"end":"2020-11-04T11:47:31.648Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:47:22.703Z","_duration":8821,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.524Z"},{"type":"test","start":"2020-11-04T11:47:31.524Z","_duration":44,"uid":"test-06-1","cid":"0-0","title":"basic log validation","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - basic log validation","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - basic log validation","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.568Z"},{"type":"test","start":"2020-11-04T11:47:31.568Z","_duration":41,"uid":"test-06-2","cid":"0-0","title":"verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - verify step creation in LiveConnect","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.609Z"},{"type":"test","start":"2020-11-04T11:47:31.609Z","_duration":38,"uid":"test-06-3","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [\n    {\n      \"timestamp\": 1604490414348,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.6363684494647108\",\n      \"id\": \"415a4264-aca2-47fa-8d49-6fe0d4d2197e\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.3 AM\",\n        \"Load Time\": \"0.161 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.1 AM - 11:46:54.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.6363684494647108\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    },\n    {\n      \"timestamp\": 1604490414504,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.8512933857700564\",\n      \"id\": \"9af15b11-e4da-4d45-abfc-42594576baa1\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.5 AM - 11:46:54.5 AM\",\n        \"Load Time\": \"0.147 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.5 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.8512933857700564\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    },\n    {\n      \"timestamp\": 1604490430201,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.25100606712438434\",\n      \"id\": \"42e9a588-13ff-4e97-8994-90d42310e202\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.1 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.1 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.25100606712438434\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    },\n    {\n      \"timestamp\": 1604490430207,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.5507051870390367\",\n      \"id\": \"88c6d39f-93f0-4d04-93f1-946911b7057d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.2 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.165 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.2 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.5507051870390367\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    },\n    {\n      \"timestamp\": 1604490439717,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.08677488124617039\",\n      \"id\": \"d7208bb3-db49-4d55-935d-25a4856aaa9d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:19.7 AM - 11:47:19.7 AM\",\n        \"Load Time\": \"0.150 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:19 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:19 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51124,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:19.5 AM - 11:47:19.7 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.08677488124617039\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step6\"\n    }\n  ],\n  \"step1\": [\n    {\n      \"timestamp\": 1604490414348,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.6363684494647108\",\n      \"id\": \"415a4264-aca2-47fa-8d49-6fe0d4d2197e\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.3 AM\",\n        \"Load Time\": \"0.161 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.1 AM - 11:46:54.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.6363684494647108\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    },\n    {\n      \"timestamp\": 1604490414504,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.8512933857700564\",\n      \"id\": \"9af15b11-e4da-4d45-abfc-42594576baa1\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:46:54.5 AM - 11:46:54.5 AM\",\n        \"Load Time\": \"0.147 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:46:54 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:46:54 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51119,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:46:54.3 AM - 11:46:54.5 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.8512933857700564\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step1\"\n    }\n  ],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [\n    {\n      \"timestamp\": 1604490430201,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.25100606712438434\",\n      \"id\": \"42e9a588-13ff-4e97-8994-90d42310e202\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.1 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.1 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.25100606712438434\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    },\n    {\n      \"timestamp\": 1604490430207,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=9&_rnd=0.5507051870390367\",\n      \"id\": \"88c6d39f-93f0-4d04-93f1-946911b7057d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:10.2 AM - 11:47:10.2 AM\",\n        \"Load Time\": \"0.165 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:10 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:10 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51122,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:10.0 AM - 11:47:10.2 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"9\",\n        \"_rnd\": \"0.5507051870390367\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step4\"\n    }\n  ],\n  \"step5\": [],\n  \"step6\": [\n    {\n      \"timestamp\": 1604490439717,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.08677488124617039\",\n      \"id\": \"d7208bb3-db49-4d55-935d-25a4856aaa9d\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"11:47:19.7 AM - 11:47:19.7 AM\",\n        \"Load Time\": \"0.150 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:19 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 11:47:19 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 51124,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"11:47:19.5 AM - 11:47:19.7 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n          \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.08677488124617039\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step6\"\n    }\n  ]\n}"}],"errorIndex":0,"end":"2020-11-04T11:47:31.648Z"}],"end":"2020-11-04T11:47:31.648Z","duration":8945},{"type":"suite","start":"2020-11-04T11:47:31.648Z","_duration":0,"uid":"suite-0-7","cid":"0-0","title":"VERIFY - check the network logs to make sure the correct tags fired for each step","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step","tests":[{"type":"test","start":"2020-11-04T11:47:31.649Z","_duration":45,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.694Z"},{"type":"test","start":"2020-11-04T11:47:31.694Z","_duration":40,"uid":"test-07-1","cid":"0-0","title":"Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Those tags are categorized as Mouseflow, which is set up to fire by default (with implicit consent)."}],"errorIndex":0,"end":"2020-11-04T11:47:31.734Z"},{"type":"test","start":"2020-11-04T11:47:31.734Z","_duration":46,"uid":"test-07-2","cid":"0-0","title":"Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Those are categorized as Google Analytics, which is set up to require explicit consent."}],"errorIndex":0,"end":"2020-11-04T11:47:31.780Z"},{"type":"test","start":"2020-11-04T11:47:31.780Z","_duration":41,"uid":"test-07-3","cid":"0-0","title":"Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Since it was an opt-out decision, no tags should fire on decision"}],"errorIndex":0,"end":"2020-11-04T11:47:31.821Z"},{"type":"test","start":"2020-11-04T11:47:31.822Z","_duration":45,"uid":"test-07-4","cid":"0-0","title":"Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.867Z"},{"type":"test","start":"2020-11-04T11:47:31.867Z","_duration":48,"uid":"test-07-5","cid":"0-0","title":"Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"No option to opt out of these tags"}],"errorIndex":0,"end":"2020-11-04T11:47:31.915Z"},{"type":"test","start":"2020-11-04T11:47:31.915Z","_duration":70,"uid":"test-07-6","cid":"0-0","title":"Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Since consent was denied for 'Google Analytics', these tags should not have fired at any point."}],"errorIndex":0,"end":"2020-11-04T11:47:31.985Z"},{"type":"test","start":"2020-11-04T11:47:31.985Z","_duration":37,"uid":"test-07-7","cid":"0-0","title":"Step 5 should not fire any tags","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 5 should not fire any tags","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 5 should not fire any tags","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 5 should not fire any tags","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"The virtual view was specific to tag 11, which has no entry in Usercentrics and should never fire."}],"errorIndex":0,"end":"2020-11-04T11:47:32.022Z"},{"type":"test","start":"2020-11-04T11:47:32.022Z","_duration":61,"uid":"test-07-8","cid":"0-0","title":"Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 11 is mapped to the service 'Another Tag', which isn't configured in Usercentrics."},{"type":"log","value":"{\n  \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n  \"queryParameters\": {\n    \"tagUid\": \"11\"\n  },\n  \"responseInfo\": {\n    \"Status\": \"200\"\n  }\n}"},{"type":"log","value":"[\n  {\n    \"timestamp\": 1604490439717,\n    \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.08677488124617039\",\n    \"id\": \"d7208bb3-db49-4d55-935d-25a4856aaa9d\",\n    \"enabledSsl\": true,\n    \"responseInfo\": {\n      \"Status\": \"200\",\n      \"Time Started - Ended\": \"11:47:19.7 AM - 11:47:19.7 AM\",\n      \"Load Time\": \"0.150 s\",\n      \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:19 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n      \"Cookies\": \"\",\n      \"File Type\": \"image/gif\",\n      \"Size\": \"95.0 B\",\n      \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n      \"parsedHeaders\": {\n        \"accept-ranges\": \"bytes\",\n        \"access-control-allow-origin\": \"*\",\n        \"cache-control\": \"public, max-age=0\",\n        \"content-type\": \"image/gif\",\n        \"date\": \"Wed, 04 Nov 2020 11:47:19 GMT\",\n        \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n        \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n        \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n        \"content-length\": \"95\",\n        \"connection\": \"keep-alive\"\n      }\n    },\n    \"journeyTagIds\": [],\n    \"stepId\": 51124,\n    \"requestInfo\": {\n      \"Protocol\": \"https\",\n      \"Method\": \"GET\",\n      \"Time Started - Ended\": \"11:47:19.5 AM - 11:47:19.7 AM\",\n      \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n      \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n      \"Size\": \"0.0 B\",\n      \"parsedHeaders\": {\n        \"host\": \"solutions.tealium.net\",\n        \"connection\": \"keep-alive\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n        \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n        \"sec-fetch-site\": \"same-origin\",\n        \"sec-fetch-mode\": \"no-cors\",\n        \"sec-fetch-dest\": \"image\",\n        \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n        \"accept-encoding\": \"gzip, deflate, br\",\n        \"accept-language\": \"en-US,en;q=0.9\",\n        \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n      }\n    },\n    \"queryParameters\": {\n      \"tagUid\": \"7\",\n      \"_rnd\": \"0.08677488124617039\"\n    },\n    \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n    \"stepName\": \"step6\"\n  }\n]"}],"errorIndex":0,"end":"2020-11-04T11:47:32.083Z"},{"type":"test","start":"2020-11-04T11:47:32.083Z","_duration":43,"uid":"test-07-9","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 6 was opted out ('Google Analytics'), so it shouldn't fire at all."}],"errorIndex":0,"end":"2020-11-04T11:47:32.127Z"},{"type":"test","start":"2020-11-04T11:47:32.127Z","_duration":44,"uid":"test-07-10","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 8 was opted out ('Google Analytics'), so it shouldn't fire at all."}],"errorIndex":0,"end":"2020-11-04T11:47:32.171Z"},{"type":"test","start":"2020-11-04T11:47:32.171Z","_duration":48,"uid":"test-07-11","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 10 was opted out ('Google Analytics'), so it shouldn't fire at all."}],"errorIndex":0,"end":"2020-11-04T11:47:32.219Z"},{"type":"test","start":"2020-11-04T11:47:32.219Z","_duration":40,"uid":"test-07-12","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 11 is misconfigured, as 'Another Tag', which isn't a configured Service in Usercentrics"}],"errorIndex":0,"end":"2020-11-04T11:47:32.259Z"},{"type":"test","start":"2020-11-04T11:47:32.259Z","_duration":49,"uid":"test-07-13","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:47:32.309Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:47:31.649Z","_duration":45,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.694Z"},{"type":"test","start":"2020-11-04T11:47:31.694Z","_duration":40,"uid":"test-07-1","cid":"0-0","title":"Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should have fired tags 7 and 9 based on IMPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Those tags are categorized as Mouseflow, which is set up to fire by default (with implicit consent)."}],"errorIndex":0,"end":"2020-11-04T11:47:31.734Z"},{"type":"test","start":"2020-11-04T11:47:31.734Z","_duration":46,"uid":"test-07-2","cid":"0-0","title":"Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should NOT have fired tags 6, 8 or 10 based on IMPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Those are categorized as Google Analytics, which is set up to require explicit consent."}],"errorIndex":0,"end":"2020-11-04T11:47:31.780Z"},{"type":"test","start":"2020-11-04T11:47:31.780Z","_duration":41,"uid":"test-07-3","cid":"0-0","title":"Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not have refired tags 7 and 9 based on EXPLICIT consent (or fired any other tags)","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Since it was an opt-out decision, no tags should fire on decision"}],"errorIndex":0,"end":"2020-11-04T11:47:31.821Z"},{"type":"test","start":"2020-11-04T11:47:31.822Z","_duration":45,"uid":"test-07-4","cid":"0-0","title":"Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should NOT have fired tags 7 or 9 (even with implicit consent) because the virtual view was tag-specific (only 10 should fire)","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:47:31.867Z"},{"type":"test","start":"2020-11-04T11:47:31.867Z","_duration":48,"uid":"test-07-5","cid":"0-0","title":"Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should only fire tags 7 or 9 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"No option to opt out of these tags"}],"errorIndex":0,"end":"2020-11-04T11:47:31.915Z"},{"type":"test","start":"2020-11-04T11:47:31.915Z","_duration":70,"uid":"test-07-6","cid":"0-0","title":"Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 4 should have NOT fired tags 6, 8, or 10 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Since consent was denied for 'Google Analytics', these tags should not have fired at any point."}],"errorIndex":0,"end":"2020-11-04T11:47:31.985Z"},{"type":"test","start":"2020-11-04T11:47:31.985Z","_duration":37,"uid":"test-07-7","cid":"0-0","title":"Step 5 should not fire any tags","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 5 should not fire any tags","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 5 should not fire any tags","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 5 should not fire any tags","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"The virtual view was specific to tag 11, which has no entry in Usercentrics and should never fire."}],"errorIndex":0,"end":"2020-11-04T11:47:32.022Z"},{"type":"test","start":"2020-11-04T11:47:32.022Z","_duration":61,"uid":"test-07-8","cid":"0-0","title":"Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 6 should have ONLY fired tag 7 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 11 is mapped to the service 'Another Tag', which isn't configured in Usercentrics."},{"type":"log","value":"{\n  \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n  \"queryParameters\": {\n    \"tagUid\": \"11\"\n  },\n  \"responseInfo\": {\n    \"Status\": \"200\"\n  }\n}"},{"type":"log","value":"[\n  {\n    \"timestamp\": 1604490439717,\n    \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.08677488124617039\",\n    \"id\": \"d7208bb3-db49-4d55-935d-25a4856aaa9d\",\n    \"enabledSsl\": true,\n    \"responseInfo\": {\n      \"Status\": \"200\",\n      \"Time Started - Ended\": \"11:47:19.7 AM - 11:47:19.7 AM\",\n      \"Load Time\": \"0.150 s\",\n      \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 11:47:19 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n      \"Cookies\": \"\",\n      \"File Type\": \"image/gif\",\n      \"Size\": \"95.0 B\",\n      \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n      \"parsedHeaders\": {\n        \"accept-ranges\": \"bytes\",\n        \"access-control-allow-origin\": \"*\",\n        \"cache-control\": \"public, max-age=0\",\n        \"content-type\": \"image/gif\",\n        \"date\": \"Wed, 04 Nov 2020 11:47:19 GMT\",\n        \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n        \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n        \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n        \"content-length\": \"95\",\n        \"connection\": \"keep-alive\"\n      }\n    },\n    \"journeyTagIds\": [],\n    \"stepId\": 51124,\n    \"requestInfo\": {\n      \"Protocol\": \"https\",\n      \"Method\": \"GET\",\n      \"Time Started - Ended\": \"11:47:19.5 AM - 11:47:19.7 AM\",\n      \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\\nAccept: image/avif,image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n      \"Cookies\": \"connect.sid: s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\",\n      \"Size\": \"0.0 B\",\n      \"parsedHeaders\": {\n        \"host\": \"solutions.tealium.net\",\n        \"connection\": \"keep-alive\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36\",\n        \"accept\": \"image/avif,image/webp,image/apng,image/*,*/*;q=0.8\",\n        \"sec-fetch-site\": \"same-origin\",\n        \"sec-fetch-mode\": \"no-cors\",\n        \"sec-fetch-dest\": \"image\",\n        \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-nocookie.html\",\n        \"accept-encoding\": \"gzip, deflate, br\",\n        \"accept-language\": \"en-US,en;q=0.9\",\n        \"cookie\": \"connect.sid=s%3AK8qrUBy9UwoFCT6m_-eBNG80T1bK5fKc.5uYYfdnOx1jQl6hA5Sh9zKeFvjp3gFiJ4FKd%2FY0m5Ho\"\n      }\n    },\n    \"queryParameters\": {\n      \"tagUid\": \"7\",\n      \"_rnd\": \"0.08677488124617039\"\n    },\n    \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n    \"stepName\": \"step6\"\n  }\n]"}],"errorIndex":0,"end":"2020-11-04T11:47:32.083Z"},{"type":"test","start":"2020-11-04T11:47:32.083Z","_duration":43,"uid":"test-07-9","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 6 was opted out ('Google Analytics'), so it shouldn't fire at all."}],"errorIndex":0,"end":"2020-11-04T11:47:32.127Z"},{"type":"test","start":"2020-11-04T11:47:32.127Z","_duration":44,"uid":"test-07-10","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 8 was opted out ('Google Analytics'), so it shouldn't fire at all."}],"errorIndex":0,"end":"2020-11-04T11:47:32.171Z"},{"type":"test","start":"2020-11-04T11:47:32.171Z","_duration":48,"uid":"test-07-11","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 10 was opted out ('Google Analytics'), so it shouldn't fire at all."}],"errorIndex":0,"end":"2020-11-04T11:47:32.219Z"},{"type":"test","start":"2020-11-04T11:47:32.219Z","_duration":40,"uid":"test-07-12","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 11 is misconfigured, as 'Another Tag', which isn't a configured Service in Usercentrics"}],"errorIndex":0,"end":"2020-11-04T11:47:32.259Z"},{"type":"test","start":"2020-11-04T11:47:32.259Z","_duration":49,"uid":"test-07-13","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"0155c38e54094e6387d728b3ff1ce846","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:47:32.309Z"}],"end":"2020-11-04T11:47:32.309Z","duration":661}],"title":"Test Report Title","options":{"stdout":true,"outputDir":"./reports/html-reports/","filename":"report.html","templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"reportTitle":"Test Report Title","options":{"logLevel":"warn","outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}},"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}},"showInBrowser":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{}},"logLevel":"warn","debug":true,"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}}}