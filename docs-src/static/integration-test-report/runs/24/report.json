{"info":{"type":"runner","start":"2020-11-04T11:13:46.660Z","_duration":52869,"cid":"0-0","capabilities":{"teal:capabilityNumber":2,"teal:runCrossBrowser":true,"teal:enableTrace":false,"moz:headless":false,"moz:webdriverClick":true,"selenium:webdriver.remote.quietExceptions":false,"teal:testContext":"<p>A Tealium iQ setup where the 'map' is missing (misconfiguration case).</p>\n<p>No tags should fire regardless of user choice.</p>\n<p>Opt-in case.</p>","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"teal:showDurations":true,"teal:opRunId":23247,"teal:testTitle":"Standard TiQ Setup, Map Missing from Configuration, User Opts In","teal:opJourneyId":3962,"rotatable":false,"strictFileInteractability":false,"acceptInsecureCerts":true,"teal:enableProxy":true,"moz:profile":"C:\\Users\\sauce\\AppData\\Local\\Temp\\rust_mozprofileEAJxB3","teal:runRemotely":true,"webdriver.remote.sessionid":"86227e60-9773-4d54-aced-fe4e9bd76166","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","moz:useNonSpecCompliantPointerOrigin":false,"platformName":"windows","unhandledPromptBehavior":"dismiss and notify","teal:hasReporterContext":true,"moz:accessibilityChecks":false,"browserName":"firefox","proxy":{"httpProxy":"13.57.103.60:51867","sslProxy":"13.57.103.60:51867","proxyType":"MANUAL"},"platformVersion":"10.0","moz:processID":904,"moz:shutdownTimeout":60000,"browserVersion":"82.0","teal:hasRunnerContext":true,"teal:enableSauceConnect":false,"timeouts":{"pageLoad":300000,"implicit":0,"script":30000},"teal:opInitialActionId":51005,"moz:geckodriverVersion":"0.27.0","teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:specPath":"tests/specs/examples/usercentrics-v2/standard_no-map_opt-in.js","setWindowRect":true,"moz:buildID":"20201014125134","pageLoadStrategy":"normal","sessionId":"cb512664e220467da49d224d2d216c7c"},"sanitizedCapabilities":"firefox.82_0.windows","config":{"protocol":"https","hostname":"ondemand.eu-central-1.saucelabs.com","port":443,"path":"/wd/hub","specs":["tests/specs/examples/usercentrics-v2/standard_no-map_opt-in.js"],"suites":{},"exclude":[],"logLevel":"warn","logLevels":{},"excludeDriverLogs":[],"bail":0,"waitforInterval":500,"waitforTimeout":20000,"framework":"mocha","reporters":["spec",[null,{"outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}}}]],"services":[["sauce"]],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"connectionRetryTimeout":40000,"connectionRetryCount":2,"execArgv":[],"runnerEnv":{},"runner":"local","mochaOpts":{"timeout":67000,"ui":"bdd","color":true,"retries":0,"specFileRetries":0},"jasmineNodeOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[null],"onWorkerStart":[],"before":[null,null],"beforeSession":[null,null],"beforeSuite":[null,null],"beforeHook":[],"beforeTest":[null,null],"beforeCommand":[],"afterCommand":[],"afterTest":[null],"afterHook":[],"afterSuite":[null],"afterSession":[],"after":[null],"onComplete":[null],"onReload":[null],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"specFileRetries":0,"baseUrl":"","user":"caleb.jaquith","key":"6fab5239-14b0-49cf-8488-21839bd22c08","coloredLogs":true,"screenshotPath":"./errorShots/","host":"https://ondemand.eu-central-1.saucelabs.com","region":"eu","capabilities":[{"browserName":"firefox","browserVersion":"latest","platformName":"Windows 10","teal:enableProxy":true,"teal:enableTrace":false,"teal:runCrossBrowser":true,"teal:runRemotely":true,"teal:showDurations":true,"teal:enableSauceConnect":false,"teal:hasReporterContext":true,"teal:hasRunnerContext":true,"teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","teal:capabilityNumber":2,"sauce:options":{},"teal:specPath":"tests/specs/examples/usercentrics-v2/standard_no-map_opt-in.js","teal:testContext":"<p>A Tealium iQ setup where the 'map' is missing (misconfiguration case).</p>\n<p>No tags should fire regardless of user choice.</p>\n<p>Opt-in case.</p>","teal:testTitle":"Standard TiQ Setup, Map Missing from Configuration, User Opts In","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"proxy":{"proxyType":"manual","sslProxy":"13.57.103.60:51867","httpProxy":"13.57.103.60:51867"},"acceptInsecureCerts":true,"teal:opJourneyId":3962,"teal:opRunId":23247,"teal:opInitialActionId":51005}],"sauceConnect":false,"ignoredWorkerServices":[],"specFileRetryAttempts":0},"specs":["/Users/calebjaquith/.git/webdriverio-standalone/tests/specs/examples/usercentrics-v2/standard_no-map_opt-in.js"],"sessionId":"cb512664e220467da49d224d2d216c7c","isMultiremote":false,"retry":0,"failures":0,"retries":0,"end":"2020-11-04T11:14:39.529Z"},"metrics":{"passed":22,"skipped":0,"failed":0,"start":"2020-11-04T11:13:46.660Z","end":"2020-11-04T11:14:39.529Z","duration":52869},"suites":[{"type":"suite","start":"2020-11-04T11:13:46.665Z","_duration":0,"uid":"suite-0-0","cid":"0-0","title":"STEP 1 - initial visit to test page","fullTitle":"STEP 1 - initial visit to test page","tests":[{"type":"test","start":"2020-11-04T11:13:46.666Z","_duration":8923,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html"},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.143},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.143,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-121355.270.png"}],"errorIndex":0,"end":"2020-11-04T11:13:55.590Z"},{"type":"test","start":"2020-11-04T11:13:55.599Z","_duration":115,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:55.714Z"},{"type":"test","start":"2020-11-04T11:13:55.714Z","_duration":3362,"uid":"test-00-2","cid":"0-0","title":"should NOT have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should NOT have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.194},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.194,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AAmGF-ePbH1Ef8mXScbN_Xx75KYntCrCn.d%2B3CMh5Zv02oi3Q%2FQuKf9FsumNXEN2H%2BmVw9S8tRaiI","sameSite":"None","path":"/","httpOnly":true,"secure":false}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"getCookieByName","sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:59.076Z"},{"type":"test","start":"2020-11-04T11:13:59.076Z","_duration":282,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8f54e426-d986-4fc9-8918-dff445e79497"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/8f54e426-d986-4fc9-8918-dff445e79497/displayed","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/8f54e426-d986-4fc9-8918-dff445e79497/displayed","body":{},"result":{"value":true},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8f54e426-d986-4fc9-8918-dff445e79497","ELEMENT":"8f54e426-d986-4fc9-8918-dff445e79497"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8f54e426-d986-4fc9-8918-dff445e79497","ELEMENT":"8f54e426-d986-4fc9-8918-dff445e79497"}]},"result":{"value":true},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:59.358Z"},{"type":"test","start":"2020-11-04T11:13:59.358Z","_duration":90,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:59.449Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:13:46.666Z","_duration":8923,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html"},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.143},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.143,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":"iVBORw0KGgoAAAANSUhEUgAABAAAAAK1CAYAAABWypx/AAAgAElEQVR4nO3dW3LrOLIFUM1/Lj2oHkndr+pQ6PKRCYIv77UiMurYpEAQhGxiS3J9/gEAAAD+vM/dHQAAAADOJwAAAACAAAIAAAAACCAAAAAAgAACAAAAAAggAAAAAIAAAgAAAAAIIAAAAACAAAIAAAAACCAAAAAAgAACAAAAAAggAAAAAIAAAgAAAAAIIAAAAACAAAIAAAAACCAAAAAAgAClAODz+ZSr81j+hsRrOns+d55j3efg06Wc55OcMb5Hfjfc5Ql9OOoJ1xIAeI/Wb/IjNwNuHv6mtJvDs26MuyFa5/FvURnTtPl2tllzudvOE67jE/ow013XEgB4l/Zv9CM3BW4g7nXG+CfdJFZeaRs9/xmLpbvHf8axu2HH3ef8F8yYy93HP+EaPqEPs91xLQGAdxEAhDjrJi7lRrG6+B8dg7cHALOO3T3Xvz7vrvDv2I2O6cjjn3D9ntCH2e64lgDAuwgAQpx5E5dwk7h0frMDgL1jVxdWdxAAvNddi8YnXLsn9GEmAQAAsEcAEMBN3HGdhWhaADBzfgkArre16Kss4r//7Zrcy7UEAPYIAP44N3HnO/tm+ck347P7JQC43pGFn0Xjs7iWAMCexwQAa21WblpGFwy/+1ZfYR0Zg1n9PNpOtc3K2IyMRfcxo/Ni5liMtD/T0efckevz/f29dmeMwZH53Wmz2r/KeY4c/0lGn9OVObH2uNF9147d3b/Sh6t+Vsx+/nTOcelxo+fWPWblMU9/7gDAGz0iANi7+ar0Y+17lb5Xb1r2bgLv6mf1xrX7mMrYdOZDd/xG5kXl2J2+jrQ928hz7si8W2tnqz9Hfi50z7V6rM48r/Rl79xHHv8Eo2M0c2xnPP9H9x/ZZ2Tez2pnyx3X8nv/0TaqP1Oe9LwBgLe6PQDo3tAt9aHb3trjR9qtPmZmP9f2qbSzZnRsOjeYnTEamRd7uuMx2u5sozfjo/N4rb2j/aqYMe+3+lxtY/R53X38E1TGeG2M9h63dcyjPx+P7F/tb2UsrphPVXdey61t3efL775n/KwBgFSPCgDWbkJGHlO9Udu6yZh9vCP93BuD0X1mj82s6zUyL/aM3gx32j1D9zl31XifcVO+do2OzOVuv49u3+vD7DE7anSMuo/ptt+Zj2fN3xn7zJhPVVdfyxnjV93vac8bAHirxwUAezcnM24cKzcZI4/pPG5WP2fcfI2Ozch5zhy/EdX+jLR3lpnXcW3byHgf+Vkw2v+RNrrHuHr73UbHqPuYbvud45/V3xn7HN3ecfW1nDF+1f3O+HkDAIkeGQAcuVGYfaM1er5n93P2DdNV53mk3Rk3fZU2u3P67JvRmddxbdvIeJ9xQz6rzc5zojtnZ2+/W3ec1vp85jzda/Os+Ttjn6PbO+68lp3jjhzvjJ83AJDo9gBgrc3uTUXl8SN9Hz3fs/s5+4Zp5nnOaHftsTNu/LbaG+3fmY5exyPz7uhN+5nnOtJu5RhnbJ8xl2e29dtu9Xgj+4/uO2M+Hp2/M/Y5ur3jjmu59thOO7OuBQCw7xEBwFq7s2+WRh47eryz+zn7hums8zx609a9qT/S5r/bum2c7YrruPX4K2/IZ7e51M7IuVW3nXEOW+3OOM7a47rHOWOezujDket01j7VbV13XMulx3TbuevnDQAkekwAsNX+yA3FrL6PHu/sfs6+YTrrPGfdtHVuXo/0u3veW9tnueI6Vto569qe1ebRfq/Nj+7jnr5QmTWfzpyn3ef/rPk78+fs6HzqeML1GWln5jgDANtuDwC6v+iPHr/72O6N51X9nH3DNNrfkZvs6vjN6mO1391zHt3eddV17LZ1xg35rDZn9XtknrxtoTJrPs3ctzsfz5q/V/ycnf2zonPsM/YdaWf2OAMA64Z+g85aYHy3tXecreNvPX7kcVv9OONxT70xnXWOI22PzIuuI/3aq5m67Y/MuzOfhx0z2txrY/R5ObMPM44xS+fnwl47s37edOfjWfN35s+3K6711ddy5nOtO84AwJgpAUD1ZmJ0W+WmYmmfo/0+43iz+nl0n9EbtVn92BuHkXnR1T3ftfMYHbvRfo7cvJ8x3p35VTVjLPf61Zmzo0af+3fozKfqfnv7V8amMx9nz9+z9jnb1ddyxnOterwzf8YCQJLh36LdX+zVdqqPXbu5OHqTUe3nkRvdM26GuuM02t7sfozc7M28ATxyQzwyH470r3OMq8Z75vnPGs+9djrbj7hqjhzR/RlW2WfGz7jufByZvyPPi5F9rrrmd1zLo8+1vXbWtgMA4w7/Jj16k7v1S37v8UdvOEduJkbPcWY/j95sjxxztK+Vx6zt133MiKM3xDPm1NFjdttY23frcZ2+3nGu3T5tbZ95rc+aH0eN/AzptrPWbnWfrf23+lfdf1Y/j+wzY27ceS2XHrfXbvXYW98HAMb5bQrwpbtgsyhhi/m0zxgAwHX8lgX4YdHGTObTtvTzB4Ar+S0LsMCCjZnMp3Xp5w8AV/JbFuBLdwFiwcIW82mfAAAAruO3LMCXkQUbrDGf9gkAAOA6fssCfOksQixW2GM+7RMAAMB1/JYFWOBz2sxkPi0zHgBwLb9hAQAAIIAAAAAAAAIIAAAAACCAAAAAAAACCAAAAAAggAAAAAAAAggAAAAAIIAAAAAAAAIIAAAAACCAAAAAAAACCAAAAAAggAAAAAAAAggAAAAAIIAAAAAAAAIIAAAAACCAAAAAAAACCAAAAAAggAAAAAAAAggAAAAAIIAAAAAAAAIIAAAAACCAAAAAAAACCAAAAAAggAAAAAAAAggAAAAAIIAAAAAAAALsBgCfz2ez7rLXr62+3dnvf4//pLEEAADg7yuvOpcWqHcHAJ2vn+iNfQYAAOCdDgUAZ+u8iv/GxfTRUOWN5wwAAMA9XhsAHNn3KQQAAAAAXGU4APj++vdz7Eufa1/7rPvvY5b2ryxs1/ZZan+pD2vHq26rnNNen9f6tfR15+8frPVjr5/+PgEAAMDf0QoA9haZa1/vLZDX9j36DoCtRfuRfm9t64YWe0HHaP/29u+MvQAAAADg/aa8A2Dv671X0bceN9q/re/PCgCq59Tp84xgpdr+rLEHAADg+ab+DYCtt9hX231TANDtS3W/Gf1ba7/7eEEAAADA33A4AFhaUL4pAPj36+7n4BMCgL3vAwAA8B6HAoCtz8FX9qtu67z7oPL9Ga/kzwguRj7z/x1G7P13r1/VcxAAAAAAvN/uym7ps+57r5jvtbP2vbWvu/0bPebWvmvvAqgcs9LnrccsLfqXxmfvXQxbfd/7GgAAgHeLXt1VFtzVxwAAAMCTRa9mBQAAAACkiF/NHvkIAAAAALyFFS0AAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQoBQD/+c9/1B8vAAAA/rZyAPDf//5X/dESAAAAAPx9AgAlAAAAAAggAFACAAAAgAACACUAAAAACHB7APD5fIa2jezbae8pdUWfBQAAAAB/32kBQHXhKgC4ZnwEAAAAANkEAA8v7wAAAABghlMCgH8XrUuL18/n8/+qsu1IO0v9Wtu2tvg+0re971f6vNanStsCAAAAAC4NALYW2XsL8BntrC28z+7b0T7vhQGd/gkAAAAAMk0PAKqvWN8VAMzedlWfZ/VPAAAAAJDpTwYAa2/Xf2sAsNfm1jkLAAAAAPjnn5MCgOrn2c8KAKrhxFsCgCPnLAAAAADgn38mBwCVV6qXwoK9bXvHOeNV/ll9mxk++BsAAAAAjLo0APhePK8tcPcW8912tr6/trCf2bdKv/YeszWWlbYFAAAAAJzyfwFIqKNvu39SCQAAAAD+PgGAAEAAAAAAEEAA0Fjwj77F/uklAAAAAPj7BABKAAAAABCgHACov10AAAD8baUAAAAAAHg3AQAAAAAE8BEAFVMAAADJ/BFAFVECAAAAIJ0AQEWUAAAAAEgnAFARJQAAAADSCQBURAkAAACAdAKAYn0+n0e2lVbfY9cZRwEAAACQbmoA8Pl8FuvKhe9Zx3hCAHB1cPDEoEIAAAAAMGZ6APCkBeJT231LAPDEEgAAAACMuTQA+Hf7939/F3RL7xxYa6vy+L13I6wdb++dDJU2K23tjd/WeWy1OXrMtQV29V0de19v9bEyDwQAAAAAY24LACoLxaOL1tE+dPpy5nkdObeZY7kXTFTb68yVyhgIAAAAAOpu+RsA1QXqyOJxxiL5SAAw+7zODgAqi/lqv9b+O3KdKmMgAAAAAKi79SMAv9uqb1v/3X+rD2ttHgkARto8IwA42o9OANAJdo4GAJVjCQAAAAB6HhUAVBdz1UXy6CL/jG2zA4Ar3sFQWcgv7XckADg6BmslAAAAANI9OgCoLhKrC8TRdwBsPa77yvvWOxv29h09t612Kt+rntfIXJg5BlslAAAAANI9JgD4XuxtLZKX9l3btrRfdVG79bb6Tpt7bXX3rZxbZVsnAKhcm24AsNVmte8CAAAAgLqpAYB6bnUWy3+xBAAAAEA6AUBICQAEAAAAQDYBwB+tzscpEkoAAAAApBMAqIgSAAAAAOnKAYBSby8AAIBkpQAAAAAAeDcBAAAAAATwEQCl1KMLAACYwx8BVEo9tgQAAAAwjwBAKfXYEgAAAMA8AgCl1GNLAAAAAPMIAJRSjy0BAAAAzCMA+KP1+XwW/33mca48l9nH7bb3+Xz+V3df66fWjLERAAAAwDxTA4DvRdHSAumqxdLVi7InLgJnj/tae4kBwN3hw4z2156jTzsvAQAAAMwzPQA4cyHzlAXVG+rMRboA4B0BwNoCfy0QOPO6jZYAAAAA5rk0APhdvC29Q6DyquTWAmapja12t96xsHXMrVfEK+9+qCzKKm1WFnkj57TWxtp4VV9NnnUue8ftXPPO9ejMr7V5PtpeZ75259ro/Nu7Bt25/lsCAAAAmOe2AODIomRv324QMXLMrUXpyCKoc66V8T8rAFj69x3n0jnu3jUanT+Vaz6yQO/0/ewAoHt+leeFAAAAAO5xy98AqC5AnhQAVBY01X6t/XdkcVgZg845VRZt1QXwmecy69pVt3fmWqetyn5PDgBmXLetEgAAAMA8t34E4HfbVnjQWcAsLXiW2j0jAOgEIEcDgMqxuud0VwDQPZfKHKhe8+/9u/P8jABg1nzdav/INRMAAADAOz0qAKguCkYWHjP6UQkAOud/JAA4OgbdPp0ZAMxaSI5u61zDo/NrdnsCAAAAoOrRAUB1UdJ59XvrFdWtdmYt0CqLsbPH4OgC8ewAoHIuneuw9yr6kfE6OwDozNdZ17e6b2eedMbjuwQAAAAwz2MCgO8FTWVh87vf3sJpbd+9bZ0FUeUcRhZFa21W+z47AFg6dvWcZp3Lbzt7/du7Rp3rsnWszrjPnq97Y92Zp6PnJwAAAIDnmhoA/IUaWaQodVe9ab4KAAAA4F4CgBcvqJR6y3wd7acAAAAA5okPADpvhVbq7nrrfBUAAADA/eIDAKXUc0sAAAAA85QDAKWUuqMAAIA5SgEAAAAA8G4CAAAAAAjgIwBKqUcXAAAwhz8CqJR6bAkAAABgHgGAUuqxJQAAAIB5BABKqceWAAAAAOYRACilHlsCAAAAmEcA8Efr8/ks/vvM41x5LrOP223v8/n8r+6+1k+tGWMjAAAAgHmmBgDfi6KlBdJVi6WrF2VPXATOHve19hIDgLvDh5ntPz0cEgAAAMA80wOAMxcyT1lQvaHOXKQLAN4RAGy9S+GKdzAIAAAA4FkuDQB+F29L7xCoLEzWFjRrbWy1u/WOha1jbr0iXnn3w97XW32sjFdlkd7p09pYLn1/bw7MOJe943aueed6dObX2jwfba8zXztzq/L4yvmtjWFnrv+WAAAAAOa5LQCoLAqqC9e1RWKlH6PH3FqUjiyCOudaGf+zAoClf99xLp3j7l2j0flTueZHF+jV+TXafudcu9dAAAAAAM9yy98AqC5knhQAVBY01X6t/XdkgVYZg845VRZt1QXwmecy69pVt3fmWqetyn5PDgBmXLetEgAAAMA8t34E4HfbVnhQXZQsbV9r94wAoBOAHA0AKsfqntNdAUD3XCpzoHrNv/fvzvMzAoBZ87Vz/TvbBQAAAPBOjwoAqouCkYXHjH5UAoDO+R8JAI6OQbdPZwYAsxaSo9s61/Do/JrdngAAAACoenQAUF0wdl793npFdaudWQu0va+vGINuHysLu5E+HzmXznXYexX9yHidHQB05mt3Do3Ov5EAoDMe3yUAAACAeR4TAHwvaCoLm9/99hZOa/vubessiCrnMLIoWmuz2vfZAcDSsavnNOtcftvZ69/eNepcl61jdcZ99nzdG+utMRi9ZnvPhe5c/y0BAAAAzDM1APgLNbJIUequetN8FQAAAMC9BAAvXlAp9Zb5OtpPAQAAAMwTHwB0Pnag1N311vkqAAAAgPvFBwBKqeeWAAAAAOYpBwBKKXVHAQAAc5QCAAAAAODdBAAAAAAQwEcAlFJqQgEAwNP5I4BKKXWwBAAAALyBAEAppQ6WAAAAgDcQACil1MESAAAA8AYCAKWUOlgCAAAA3kAA8Efr8/ks/vvM41x5LrOP223v8/n8r+6+1m+oJ4/TjL4JAAAAeIOpAcD3omhpgXTVIuDqxcYTFzezx32tvcQA4O7w4eixtp6jV1zDkX2eHmIJAAAAeIPpAcBVC5k39OMpY3DmglUAcO2xzx7fO46xFURcEVIIAAAASHFpAPC7eFt6h0Dlhn9tobDWxla71VdDlx639u/Kux/2vt7qY2W8Kov0Tp/WxnLp+3tzYMa57B23c80716Mzv9bm+Wh7e/N1ZLF85Hp1xr/Sp+5zfmZfO3NgqQQAAAC8wW0BQOVmu7pw/f1epx+jx9xalI4sLjrnWhn/swKApX/fcS6d4+5do9H5U7nmRxe+s+bX6LE75zbyvOpev8726lwRAAAAkOKWvwFQXSA8KQCoLBSq/Vr778jCpzIGnXOqLIaqC+Azz2XWtatu78y1TluV/UYCgBnHndmXuwOAGfNrqwQAAAC8wa0fAfjdthUeVG/2l7avtXtGANAJQI4GAJVjdc/prgCgey6VOVC95t/7d+f5GQHA6Hzde950rseRvggAAADgmR4VAFRvtkdu6Gf0oxIAdM7/SABwdAy6fTozAJi1QBvd1rmGR+fX7PZGwpaR85w1/qN9EgAAAMBxjw4AqoubyivGS/t22pmx0Kh8fcUYdPtYWTCN9PnIuXSuw94r10fG6+wAoDpfZ82r6nUZHf/RPl0VAHSu23cJAAAAeIPHBADfC4XKguF3v73Fytq+e9s6C43KOYwsNtbarPZ9dgCwdOzqOc06l9929vq3d40612XrWJ1xP2O+Vp873X79Hq/zPOjOia1rNTq39vo6Oj7/lgAAAIA3mBoA/IUauflX6q4yX58xpgIAAADeQAAw4eZfqbvKfH3GeAoAAAB4g/gAoPOxA6XuLvP1/PEdeZwAAACAN4gPAJRS6mgJAAAAeINyAKCUUmq9AADg6UoBAAAAAPBuAgAAAAAI4CMASilVLAAAeDN/BFAppQolAAAA4O0EAEopVSgBAAAAbycAUEqpQgkAAAB4OwGAUkoVSgAAAMDbCQD+aH0+n8V/n3mcK89l9nG77X0+n//V3df6DXX3OM04vgAAAIC3mxoAfC+KlhZIVy0Crl5s3L242evTjP6ttZcYANwdPsw65pUBxtpx9n5mPGmMBQAAALzd9ADg6oXMk/vxlDE4c8EqALj22G883t3jO6tNAQAAAG93aQDwu3hbeodA5VXApW2/bX63sdVu9dXHpcet/bvy7oe9r7f6WBmvyiK906e1sVz6/t4cmHEue8ftXPPO9ejMr7V5Ptre3nwdfe6MXq/O+FePe2T+7PWn+7z7LQEAAABvd1sAULkRry5c1xaJlX6MHnNrUTqy8Oica2X8zwoAlv59x7l0jrt3jUbnT+WaV855xnwdDTBGAoG98e88rzr7dce68hwVAAAAkOSWvwFQXSA8KQCoLCKq/Vr7b3dBVB2DzjlVFkrVBfCZ5zLr2lW3d+Zap63KfiMBQOdYI9el25eZQcjIMatzaKsEAAAAvN2tHwH43VZ9dbIbAKy1e0YA0AlAjgYAlWN1z+muAKB7LpU5UL3m3/t35/kZi/LR+br3vBmd892+CAAAAOCZHhUAVG/ER272Z/SjEgB0zv9IAHB0DLp9OjMAmLV4G93WuYZH59fs9maPdXXf2QHAaEAgAAAAgLpHBwDVhUnlFeOlfTvtzFiEVL6+Ygy6fawspkb6fORcOtdh75XrI+N1dgBQna/VeTXreTY6/tU52O17Z852rs13CQAAAHi7xwQA3wuF6oKhszha23dvW3cBtXcOIwuRtTarfZ8dACwdu3pOs87lt529/u1do8512TpWZ9zPmK/d587o86zzPOiO5+hzYa8/o8f8twQAAAC83dQA4C/UyMJAqbvKfL1u3AQAAAC8nQBgwsJAqbvKfL1uzAQAAAC8XXwA0Hk7tFJ3l/k6ZwxHHicAAADg7eIDAKWUqpQAAACAtysHAEoplV4AAPBmpQAAAAAAeDcBAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAI3dacsAAAUWSURBVAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAAAEAAAAABBAAAAAAQAABAAAAAAQQAAAAAEAAAQAAAAAEEAAAAABAgP8Dk+qBIck5YV4AAAAASUVORK5CYII="},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-map.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-121355.270.png"}],"errorIndex":0,"end":"2020-11-04T11:13:55.590Z"},{"type":"test","start":"2020-11-04T11:13:55.599Z","_duration":115,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:55.714Z"},{"type":"test","start":"2020-11-04T11:13:55.714Z","_duration":3362,"uid":"test-00-2","cid":"0-0","title":"should NOT have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should NOT have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.194},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.194,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AAmGF-ePbH1Ef8mXScbN_Xx75KYntCrCn.d%2B3CMh5Zv02oi3Q%2FQuKf9FsumNXEN2H%2BmVw9S8tRaiI","sameSite":"None","path":"/","httpOnly":true,"secure":false}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"getCookieByName","sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:59.076Z"},{"type":"test","start":"2020-11-04T11:13:59.076Z","_duration":282,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8f54e426-d986-4fc9-8918-dff445e79497"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/8f54e426-d986-4fc9-8918-dff445e79497/displayed","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/8f54e426-d986-4fc9-8918-dff445e79497/displayed","body":{},"result":{"value":true},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8f54e426-d986-4fc9-8918-dff445e79497","ELEMENT":"8f54e426-d986-4fc9-8918-dff445e79497"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8f54e426-d986-4fc9-8918-dff445e79497","ELEMENT":"8f54e426-d986-4fc9-8918-dff445e79497"}]},"result":{"value":true},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:59.358Z"},{"type":"test","start":"2020-11-04T11:13:59.358Z","_duration":90,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:13:59.449Z"}],"end":"2020-11-04T11:13:59.449Z","duration":12784},{"type":"suite","start":"2020-11-04T11:13:59.450Z","_duration":0,"uid":"suite-0-1","cid":"0-0","title":"STEP 2 - accept all tracking","fullTitle":"STEP 2 - accept all tracking","tests":[{"type":"test","start":"2020-11-04T11:13:59.450Z","_duration":5175,"uid":"test-01-0","cid":"0-0","title":"should accept tracking","fullTitle":"STEP 2 - accept all tracking should accept tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"2e213225-4cbc-48a6-91b8-74370aa5d5a8"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/2e213225-4cbc-48a6-91b8-74370aa5d5a8/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/2e213225-4cbc-48a6-91b8-74370aa5d5a8/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.142},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.142,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:04.625Z"},{"type":"test","start":"2020-11-04T11:14:04.625Z","_duration":637,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - accept all tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-121404.686.png"}],"errorIndex":0,"end":"2020-11-04T11:14:05.262Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:13:59.450Z","_duration":5175,"uid":"test-01-0","cid":"0-0","title":"should accept tracking","fullTitle":"STEP 2 - accept all tracking should accept tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"2e213225-4cbc-48a6-91b8-74370aa5d5a8"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/2e213225-4cbc-48a6-91b8-74370aa5d5a8/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/2e213225-4cbc-48a6-91b8-74370aa5d5a8/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.142},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.142,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:04.625Z"},{"type":"test","start":"2020-11-04T11:14:04.625Z","_duration":637,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - accept all tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":"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IAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAs1ddHkAABjSSURBVAgAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACA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5kv0D/zcJRERseHprfGWD61o3f47R66IB594JiJ2/Km///09Z+10/19999I48ptXxokr1sQlNzwSN9y1Pq5f82Scf/WD8bf/en28dO7CSv167TtOi6c2b21yiAEAAJilxioAiIg44ZzVtbwCYCoEOHHFmoiIuP3eDfHLB5/Ruv03P7Asbl23ISIiHn7y2fjQt66KPeYvbtvWrnMXtt5a0E+dcM7qJocWAACAWWzsAoBt27bH//n/nFNbCPCz85fEZTc/GhERV9z6WLzu4NNbi/lfPviMWLxqbWvft9+7If7u326I3/vwufGSvdt/2F/VDwD8/Y+cG9u2bW9qWAEAAJjlxi4AiIi49s4nYvd92z8bn1NTH/D3ywefET+544mIiPibE6+LiTkL4mfevqi13YGfuyQuvuGR1v4nJyP++czbd2qjn3rl/kviujVPNjWcAAAAFGAsA4CIiMWr1tb6VoA3Hro0vnrKrfEb7z27tbCfqqmv9/u7i+Nflt8ZG57eGt85645aAoBd9l4Q5/3kwaaHEwAAgFlubAOAiIivLLm1lhCgyfraqbc2PYwAAAAUYKwDgIgXXrI/jvU3J17X9PABAABQiLEPACIi3ve1KxpfzOfW+752RdPDBgAAQEFmRQCwfftkHD5GIcBhX748Jicnmx42AAAACjIrAoApH/zGlY0v7nvVx75zddPDBAAAQIFmVQAQEXHyRXfHHvOXNL7Qn1mvOuCUWLRqbdPDAwAAQKFmXQAQEbHmgU3xtmMubHzRP1VvO+bCuP+xZ5oeFgAAAAo2KwOAiIjJyYjvnHVH7DF/cWML/z3mL45vL70jvN0fAACAps3aAGDK2oc3x0e+/ZN4xX7DCwJesd/i+PA/XxVrH97c9OEDAABARBQQAEx5cuNz8eUlt8Seh589sIX/noefHV9ecks8ufG5pg8XAAAAdlJMADDdbfduiM+ffFP88dEX9LXg333eovizT14Unz/5prjt3g1NHxYAAAB0VGQAMNNlNz8a31t2Zxx9wjUx79hVsdcRy+P17zojdp+3KHaftyhe/64zYq8jlse8Y1fF0SdcE99bdmdcdvOjTXcbAAAAkgkAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAggAAAAAoAACAAAAACiAAAAAAAAKIAAAAACAAvz/4aZbdeca1NwAAAAASUVORK5CYII="},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"b36d6e54-3861-41c9-9b06-d2728c0979fa","ELEMENT":"b36d6e54-3861-41c9-9b06-d2728c0979fa"}]},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-121404.686.png"}],"errorIndex":0,"end":"2020-11-04T11:14:05.262Z"}],"end":"2020-11-04T11:14:05.262Z","duration":5812},{"type":"suite","start":"2020-11-04T11:14:05.264Z","_duration":0,"uid":"suite-0-2","cid":"0-0","title":"STEP 3 - fire virtual page view by clicking button","fullTitle":"STEP 3 - fire virtual page view by clicking button","tests":[{"type":"test","start":"2020-11-04T11:14:05.264Z","_duration":5479,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"cdbefa66-eb8b-4059-bc96-5db75f6cdd6e"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/cdbefa66-eb8b-4059-bc96-5db75f6cdd6e/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/cdbefa66-eb8b-4059-bc96-5db75f6cdd6e/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.167},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.167,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:10.743Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:14:05.264Z","_duration":5479,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"cdbefa66-eb8b-4059-bc96-5db75f6cdd6e"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/cdbefa66-eb8b-4059-bc96-5db75f6cdd6e/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/cdbefa66-eb8b-4059-bc96-5db75f6cdd6e/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.167},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.167,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:10.743Z"}],"end":"2020-11-04T11:14:10.743Z","duration":5479},{"type":"suite","start":"2020-11-04T11:14:10.744Z","_duration":0,"uid":"suite-0-3","cid":"0-0","title":"STEP 4 - fire virtual page view to tag 10 only by clicking button","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button","tests":[{"type":"test","start":"2020-11-04T11:14:10.744Z","_duration":5538,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"aef789f7-61c4-45e1-bbfc-3876a3cddaa6"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/aef789f7-61c4-45e1-bbfc-3876a3cddaa6/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/aef789f7-61c4-45e1-bbfc-3876a3cddaa6/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.198},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.198,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:16.282Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:14:10.744Z","_duration":5538,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"aef789f7-61c4-45e1-bbfc-3876a3cddaa6"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/aef789f7-61c4-45e1-bbfc-3876a3cddaa6/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/aef789f7-61c4-45e1-bbfc-3876a3cddaa6/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.198},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.198,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:16.282Z"}],"end":"2020-11-04T11:14:16.282Z","duration":5538},{"type":"suite","start":"2020-11-04T11:14:16.283Z","_duration":0,"uid":"suite-0-4","cid":"0-0","title":"STEP 5 - fire virtual page view to tag 11 only","fullTitle":"STEP 5 - fire virtual page view to tag 11 only","tests":[{"type":"test","start":"2020-11-04T11:14:16.283Z","_duration":4862,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"a8e1d7d5-ce6f-48e7-8692-2311b3692cce"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/a8e1d7d5-ce6f-48e7-8692-2311b3692cce/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/a8e1d7d5-ce6f-48e7-8692-2311b3692cce/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.002},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.002,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:21.145Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:14:16.283Z","_duration":4862,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"a8e1d7d5-ce6f-48e7-8692-2311b3692cce"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/a8e1d7d5-ce6f-48e7-8692-2311b3692cce/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/a8e1d7d5-ce6f-48e7-8692-2311b3692cce/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.002},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.002,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:21.145Z"}],"end":"2020-11-04T11:14:21.145Z","duration":4862},{"type":"suite","start":"2020-11-04T11:14:21.146Z","_duration":0,"uid":"suite-0-5","cid":"0-0","title":"STEP 6 - fire virtual page view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only","tests":[{"type":"test","start":"2020-11-04T11:14:21.146Z","_duration":5097,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"3a8d78e8-9c89-4093-bffe-18d567190fe8"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/3a8d78e8-9c89-4093-bffe-18d567190fe8/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/3a8d78e8-9c89-4093-bffe-18d567190fe8/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.2},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.2,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:26.243Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:14:21.146Z","_duration":5097,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"3a8d78e8-9c89-4093-bffe-18d567190fe8"}},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/3a8d78e8-9c89-4093-bffe-18d567190fe8/click","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/3a8d78e8-9c89-4093-bffe-18d567190fe8/click","body":{},"result":{"value":null},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.2},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.2,"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:26.243Z"}],"end":"2020-11-04T11:14:26.243Z","duration":5097},{"type":"suite","start":"2020-11-04T11:14:26.245Z","_duration":0,"uid":"suite-0-6","cid":"0-0","title":"FINALIZE - get Proxy logs to confirm tag firings","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings","tests":[{"type":"test","start":"2020-11-04T11:14:26.245Z","_duration":12596,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:38.841Z"},{"type":"test","start":"2020-11-04T11:14:38.841Z","_duration":83,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:38.924Z"},{"type":"test","start":"2020-11-04T11:14:38.924Z","_duration":41,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:14:38.966Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:14:26.245Z","_duration":12596,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:38.841Z"},{"type":"test","start":"2020-11-04T11:14:38.841Z","_duration":83,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:38.924Z"},{"type":"test","start":"2020-11-04T11:14:38.924Z","_duration":41,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:14:38.966Z"}],"end":"2020-11-04T11:14:38.966Z","duration":12721},{"type":"suite","start":"2020-11-04T11:14:38.966Z","_duration":0,"uid":"suite-0-7","cid":"0-0","title":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","tests":[{"type":"test","start":"2020-11-04T11:14:38.966Z","_duration":44,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:39.010Z"},{"type":"test","start":"2020-11-04T11:14:39.010Z","_duration":45,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.055Z"},{"type":"test","start":"2020-11-04T11:14:39.055Z","_duration":47,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.102Z"},{"type":"test","start":"2020-11-04T11:14:39.103Z","_duration":45,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.148Z"},{"type":"test","start":"2020-11-04T11:14:39.148Z","_duration":40,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.188Z"},{"type":"test","start":"2020-11-04T11:14:39.189Z","_duration":39,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.228Z"},{"type":"test","start":"2020-11-04T11:14:39.228Z","_duration":47,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.275Z"},{"type":"test","start":"2020-11-04T11:14:39.275Z","_duration":48,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:14:39.323Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:14:38.966Z","_duration":44,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:14:39.010Z"},{"type":"test","start":"2020-11-04T11:14:39.010Z","_duration":45,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.055Z"},{"type":"test","start":"2020-11-04T11:14:39.055Z","_duration":47,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.102Z"},{"type":"test","start":"2020-11-04T11:14:39.103Z","_duration":45,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.148Z"},{"type":"test","start":"2020-11-04T11:14:39.148Z","_duration":40,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.188Z"},{"type":"test","start":"2020-11-04T11:14:39.189Z","_duration":39,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.228Z"},{"type":"test","start":"2020-11-04T11:14:39.228Z","_duration":47,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:14:39.275Z"},{"type":"test","start":"2020-11-04T11:14:39.275Z","_duration":48,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"cb512664e220467da49d224d2d216c7c","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:14:39.323Z"}],"end":"2020-11-04T11:14:39.323Z","duration":357}],"title":"Test Report Title","options":{"stdout":true,"outputDir":"./reports/html-reports/","filename":"report.html","templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"reportTitle":"Test Report Title","options":{"logLevel":"warn","outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}},"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}},"showInBrowser":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{}},"logLevel":"warn","debug":true,"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}}}