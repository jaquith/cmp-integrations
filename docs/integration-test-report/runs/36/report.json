{"info":{"type":"runner","start":"2020-11-04T10:52:52.922Z","_duration":42389,"cid":"0-0","capabilities":{"browserVersion":"86.0.622.43","strictFileInteractability":false,"acceptInsecureCerts":true,"webauthn:virtualAuthenticators":true,"networkConnectionEnabled":false,"timeouts":{"pageLoad":300000,"implicit":0,"script":30000},"browserName":"msedge","setWindowRect":true,"proxy":{"httpProxy":"13.57.103.60:61639","sslProxy":"13.57.103.60:61639","proxyType":"manual"},"pageLoadStrategy":"normal","ms:edgeOptions":{"debuggerAddress":"localhost:49772"},"platformName":"windows","msedge":{"msedgedriverVersion":"86.0.622.43 (aecc56815110f44c6552813fdd27a416872192c8)","userDataDir":"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\scoped_dir1828_1004387981"},"unhandledPromptBehavior":"dismiss and notify","sessionId":"0379ceb91a1b4223bb4544fb1f863885"},"sanitizedCapabilities":"msedge.86_0_622_43.windows","config":{"protocol":"https","hostname":"ondemand.eu-central-1.saucelabs.com","port":443,"path":"/wd/hub","specs":["tests/specs/examples/usercentrics-v2/noview_opt-in.js"],"suites":{},"exclude":[],"logLevel":"warn","logLevels":{},"excludeDriverLogs":[],"bail":0,"waitforInterval":500,"waitforTimeout":20000,"framework":"mocha","reporters":["spec",[null,{"outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}}}]],"services":[["sauce"]],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"connectionRetryTimeout":40000,"connectionRetryCount":2,"execArgv":[],"runnerEnv":{},"runner":"local","mochaOpts":{"timeout":67000,"ui":"bdd","color":true,"retries":0,"specFileRetries":0},"jasmineNodeOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[null],"onWorkerStart":[],"before":[null,null],"beforeSession":[null,null],"beforeSuite":[null,null],"beforeHook":[],"beforeTest":[null,null],"beforeCommand":[],"afterCommand":[],"afterTest":[null],"afterHook":[],"afterSuite":[null],"afterSession":[],"after":[null],"onComplete":[null],"onReload":[null],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"specFileRetries":0,"baseUrl":"","user":"caleb.jaquith","key":"6fab5239-14b0-49cf-8488-21839bd22c08","coloredLogs":true,"screenshotPath":"./errorShots/","host":"https://ondemand.eu-central-1.saucelabs.com","region":"eu","capabilities":[{"browserName":"MicrosoftEdge","browserVersion":"latest","platformName":"Windows 10","teal:enableProxy":true,"teal:enableTrace":false,"teal:runCrossBrowser":true,"teal:runRemotely":true,"teal:showDurations":true,"teal:enableSauceConnect":false,"teal:hasReporterContext":true,"teal:hasRunnerContext":true,"teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","teal:capabilityNumber":3,"sauce:options":{},"teal:specPath":"tests/specs/examples/usercentrics-v2/noview_opt-in.js","teal:testContext":"<p>A Tealium iQ setup with the <a href=\"https://docs.tealium.com/platforms/javascript/settings/#noview\">noview</a> setting active and the Usercentrics integration correctly set up.</p>\n<p>User opt-in case.</p>","teal:testTitle":"'noview' Setting Active, User Opts In","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"proxy":{"proxyType":"manual","sslProxy":"13.57.103.60:61639","httpProxy":"13.57.103.60:61639"},"acceptInsecureCerts":true,"teal:opJourneyId":3962,"teal:opRunId":23234,"teal:opInitialActionId":50932}],"sauceConnect":false,"ignoredWorkerServices":[],"specFileRetryAttempts":0},"specs":["/Users/calebjaquith/.git/webdriverio-standalone/tests/specs/examples/usercentrics-v2/noview_opt-in.js"],"sessionId":"0379ceb91a1b4223bb4544fb1f863885","isMultiremote":false,"retry":0,"failures":0,"retries":0,"end":"2020-11-04T10:53:35.311Z"},"metrics":{"passed":22,"skipped":0,"failed":0,"start":"2020-11-04T10:52:52.922Z","end":"2020-11-04T10:53:35.311Z","duration":42389},"suites":[{"type":"suite","start":"2020-11-04T10:52:52.927Z","_duration":0,"uid":"suite-0-0","cid":"0-0","title":"STEP 1 - initial visit to test page","fullTitle":"STEP 1 - initial visit to test page","tests":[{"type":"test","start":"2020-11-04T10:52:52.928Z","_duration":8810,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html"},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.003},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.003,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-115301.268.png"}],"errorIndex":0,"end":"2020-11-04T10:53:01.738Z"},{"type":"test","start":"2020-11-04T10:53:01.745Z","_duration":100,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:01.845Z"},{"type":"test","start":"2020-11-04T10:53:01.845Z","_duration":5978,"uid":"test-00-2","cid":"0-0","title":"should have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":5.815},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":5.815,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":".tealium.net","secure":false,"value":"v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023183,"path":"/","httpOnly":false,"name":"utag_main"},{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y","path":"/","httpOnly":true,"secure":false}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"getCookieByName","result":{"domain":".tealium.net","secure":false,"value":"v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023183,"path":"/","httpOnly":false,"name":"utag_main"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:07.823Z"},{"type":"test","start":"2020-11-04T10:53:07.824Z","_duration":301,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8dfc2578-0967-4674-92f3-eca1af0c4ec8"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/8dfc2578-0967-4674-92f3-eca1af0c4ec8/displayed","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/8dfc2578-0967-4674-92f3-eca1af0c4ec8/displayed","body":{},"result":{"value":true},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8dfc2578-0967-4674-92f3-eca1af0c4ec8","ELEMENT":"8dfc2578-0967-4674-92f3-eca1af0c4ec8"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8dfc2578-0967-4674-92f3-eca1af0c4ec8","ELEMENT":"8dfc2578-0967-4674-92f3-eca1af0c4ec8"}]},"result":{"value":true},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:08.126Z"},{"type":"test","start":"2020-11-04T10:53:08.126Z","_duration":98,"uid":"test-00-4","cid":"0-0","title":"should NOT have queued an initial view event (because of the noview setting)","fullTitle":"STEP 1 - initial visit to test page should NOT have queued an initial view event (because of the noview setting)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have queued an initial view event (because of the noview setting)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have queued an initial view event (because of the noview setting)","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"result":{"value":0},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:08.224Z"},{"type":"test","start":"2020-11-04T10:53:08.224Z","_duration":110,"uid":"test-00-5","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:08.334Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T10:52:52.928Z","_duration":8810,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html"},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.003},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.003,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-115301.268.png"}],"errorIndex":0,"end":"2020-11-04T10:53:01.738Z"},{"type":"test","start":"2020-11-04T10:53:01.745Z","_duration":100,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:01.845Z"},{"type":"test","start":"2020-11-04T10:53:01.845Z","_duration":5978,"uid":"test-00-2","cid":"0-0","title":"should have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":5.815},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":5.815,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":".tealium.net","secure":false,"value":"v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023183,"path":"/","httpOnly":false,"name":"utag_main"},{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y","path":"/","httpOnly":true,"secure":false}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"getCookieByName","result":{"domain":".tealium.net","secure":false,"value":"v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session","expiry":1636023183,"path":"/","httpOnly":false,"name":"utag_main"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:07.823Z"},{"type":"test","start":"2020-11-04T10:53:07.824Z","_duration":301,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"8dfc2578-0967-4674-92f3-eca1af0c4ec8"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/8dfc2578-0967-4674-92f3-eca1af0c4ec8/displayed","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/8dfc2578-0967-4674-92f3-eca1af0c4ec8/displayed","body":{},"result":{"value":true},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8dfc2578-0967-4674-92f3-eca1af0c4ec8","ELEMENT":"8dfc2578-0967-4674-92f3-eca1af0c4ec8"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"8dfc2578-0967-4674-92f3-eca1af0c4ec8","ELEMENT":"8dfc2578-0967-4674-92f3-eca1af0c4ec8"}]},"result":{"value":true},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:08.126Z"},{"type":"test","start":"2020-11-04T10:53:08.126Z","_duration":98,"uid":"test-00-4","cid":"0-0","title":"should NOT have queued an initial view event (because of the noview setting)","fullTitle":"STEP 1 - initial visit to test page should NOT have queued an initial view event (because of the noview setting)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have queued an initial view event (because of the noview setting)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have queued an initial view event (because of the noview setting)","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"result":{"value":0},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:08.224Z"},{"type":"test","start":"2020-11-04T10:53:08.224Z","_duration":110,"uid":"test-00-5","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:08.334Z"}],"end":"2020-11-04T10:53:08.334Z","duration":15407},{"type":"suite","start":"2020-11-04T10:53:08.336Z","_duration":0,"uid":"suite-0-1","cid":"0-0","title":"STEP 2 - accept all tracking","fullTitle":"STEP 2 - accept all tracking","tests":[{"type":"test","start":"2020-11-04T10:53:08.336Z","_duration":4871,"uid":"test-01-0","cid":"0-0","title":"should accept tracking","fullTitle":"STEP 2 - accept all tracking should accept tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0343ea1b-7674-4a94-becc-b797ba9942f9"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/0343ea1b-7674-4a94-becc-b797ba9942f9/click","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/0343ea1b-7674-4a94-becc-b797ba9942f9/click","body":{},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:13.207Z"},{"type":"test","start":"2020-11-04T10:53:13.207Z","_duration":659,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - accept all tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-115313.255.png"}],"errorIndex":0,"end":"2020-11-04T10:53:13.866Z"},{"type":"test","start":"2020-11-04T10:53:13.866Z","_duration":94,"uid":"test-01-2","cid":"0-0","title":"should have an empty queue","fullTitle":"STEP 2 - accept all tracking should have an empty queue","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should have an empty queue","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should have an empty queue","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"result":{"value":0},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:13.960Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T10:53:08.336Z","_duration":4871,"uid":"test-01-0","cid":"0-0","title":"should accept tracking","fullTitle":"STEP 2 - accept all tracking should accept tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should accept tracking","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-accept-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-accept-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"0343ea1b-7674-4a94-becc-b797ba9942f9"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/0343ea1b-7674-4a94-becc-b797ba9942f9/click","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/0343ea1b-7674-4a94-becc-b797ba9942f9/click","body":{},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:13.207Z"},{"type":"test","start":"2020-11-04T10:53:13.207Z","_duration":659,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - accept all tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"d63fd21a-2f79-4e5f-917b-03d977a40477","ELEMENT":"d63fd21a-2f79-4e5f-917b-03d977a40477"}]},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-115313.255.png"}],"errorIndex":0,"end":"2020-11-04T10:53:13.866Z"},{"type":"test","start":"2020-11-04T10:53:13.866Z","_duration":94,"uid":"test-01-2","cid":"0-0","title":"should have an empty queue","fullTitle":"STEP 2 - accept all tracking should have an empty queue","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should have an empty queue","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - accept all tracking - should have an empty queue","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration.implicitEventQueue.length\n    }).apply(null, arguments)","args":[]},"result":{"value":0},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:13.960Z"}],"end":"2020-11-04T10:53:13.960Z","duration":5624},{"type":"suite","start":"2020-11-04T10:53:13.960Z","_duration":0,"uid":"suite-0-2","cid":"0-0","title":"STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button","fullTitle":"STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button","tests":[{"type":"test","start":"2020-11-04T10:53:13.961Z","_duration":5359,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-6-and-7"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-6-and-7"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"be4a7d65-65f6-46ff-8ddd-d2f6cf11e940"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/be4a7d65-65f6-46ff-8ddd-d2f6cf11e940/click","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/be4a7d65-65f6-46ff-8ddd-d2f6cf11e940/click","body":{},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.014},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.014,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:19.321Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T10:53:13.961Z","_duration":5359,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view to tags 6 and 7 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-6-and-7"},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-6-and-7"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"be4a7d65-65f6-46ff-8ddd-d2f6cf11e940"}},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/be4a7d65-65f6-46ff-8ddd-d2f6cf11e940/click","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/be4a7d65-65f6-46ff-8ddd-d2f6cf11e940/click","body":{},"result":{"value":null},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.014},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.014,"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:19.321Z"}],"end":"2020-11-04T10:53:19.321Z","duration":5361},{"type":"suite","start":"2020-11-04T10:53:19.321Z","_duration":0,"uid":"suite-0-3","cid":"0-0","title":"FINALIZE - get Proxy logs to confirm tag firings","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings","tests":[{"type":"test","start":"2020-11-04T10:53:19.321Z","_duration":15136,"uid":"test-03-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.458Z"},{"type":"test","start":"2020-11-04T10:53:34.458Z","_duration":61,"uid":"test-03-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.519Z"},{"type":"test","start":"2020-11-04T10:53:34.519Z","_duration":82,"uid":"test-03-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [\n    {\n      \"timestamp\": 1604487196384,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=6&_rnd=0.5496107721813157\",\n      \"id\": \"99dec882-f2ba-4875-90d5-0beec3cdd933\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.148 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"6\",\n        \"_rnd\": \"0.5496107721813157\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    },\n    {\n      \"timestamp\": 1604487196392,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.9758409768152962\",\n      \"id\": \"583beda7-2ff8-47bf-8624-3a56975c59dc\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.9758409768152962\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    }\n  ],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [\n    {\n      \"timestamp\": 1604487196384,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=6&_rnd=0.5496107721813157\",\n      \"id\": \"99dec882-f2ba-4875-90d5-0beec3cdd933\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.148 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"6\",\n        \"_rnd\": \"0.5496107721813157\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    },\n    {\n      \"timestamp\": 1604487196392,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.9758409768152962\",\n      \"id\": \"583beda7-2ff8-47bf-8624-3a56975c59dc\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.9758409768152962\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    }\n  ]\n}"}],"errorIndex":0,"end":"2020-11-04T10:53:34.601Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T10:53:19.321Z","_duration":15136,"uid":"test-03-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.458Z"},{"type":"test","start":"2020-11-04T10:53:34.458Z","_duration":61,"uid":"test-03-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.519Z"},{"type":"test","start":"2020-11-04T10:53:34.519Z","_duration":82,"uid":"test-03-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [\n    {\n      \"timestamp\": 1604487196384,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=6&_rnd=0.5496107721813157\",\n      \"id\": \"99dec882-f2ba-4875-90d5-0beec3cdd933\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.148 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"6\",\n        \"_rnd\": \"0.5496107721813157\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    },\n    {\n      \"timestamp\": 1604487196392,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.9758409768152962\",\n      \"id\": \"583beda7-2ff8-47bf-8624-3a56975c59dc\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.9758409768152962\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    }\n  ],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [\n    {\n      \"timestamp\": 1604487196384,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=6&_rnd=0.5496107721813157\",\n      \"id\": \"99dec882-f2ba-4875-90d5-0beec3cdd933\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.148 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"6\",\n        \"_rnd\": \"0.5496107721813157\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    },\n    {\n      \"timestamp\": 1604487196392,\n      \"requestLog\": \"https://solutions.tealium.net/hosted/i.gif?tagUid=7&_rnd=0.9758409768152962\",\n      \"id\": \"583beda7-2ff8-47bf-8624-3a56975c59dc\",\n      \"enabledSsl\": true,\n      \"responseInfo\": {\n        \"Status\": \"200\",\n        \"Time Started - Ended\": \"10:53:16.3 AM - 10:53:16.3 AM\",\n        \"Load Time\": \"0.151 s\",\n        \"Headers\": \"Accept-Ranges: bytes\\nAccess-Control-Allow-Origin: *\\nCache-Control: public, max-age=0\\nContent-Type: image/gif\\nDate: Wed, 04 Nov 2020 10:53:16 GMT\\nETag: W/\\\"5f-1758ab29ed1\\\"\\nLast-Modified: Mon, 02 Nov 2020 20:42:43 GMT\\nX-Clacks-Overhead: GNU Terry Pratchet\\nContent-Length: 95\\nConnection: keep-alive\",\n        \"Cookies\": \"\",\n        \"File Type\": \"image/gif\",\n        \"Size\": \"95.0 B\",\n        \"Payload\": \"PNG\\r\\n\\u001a\\n\\u0000\\u0000\\u0000\\rIHDR\\u0000\\u0000\\u0000\\u0001\\u0000\\u0000\\u0000\\u0001\\u0001\\u0003\\u0000\\u0000\\u0000%ÛVÊ\\u0000\\u0000\\u0000\\u0003PLTEÿM\\u0000\\\\58\\u0000\\u0000\\u0000\\u0001tRNSÌÒ4Vý\\u0000\\u0000\\u0000\\nIDATxcb\\u0000\\u0000\\u0000\\u0006\\u0000\\u000367|¨\\u0000\\u0000\\u0000\\u0000IEND®B`\",\n        \"parsedHeaders\": {\n          \"accept-ranges\": \"bytes\",\n          \"access-control-allow-origin\": \"*\",\n          \"cache-control\": \"public, max-age=0\",\n          \"content-type\": \"image/gif\",\n          \"date\": \"Wed, 04 Nov 2020 10:53:16 GMT\",\n          \"etag\": \"W/\\\"5f-1758ab29ed1\\\"\",\n          \"last-modified\": \"Mon, 02 Nov 2020 20:42:43 GMT\",\n          \"x-clacks-overhead\": \"GNU Terry Pratchet\",\n          \"content-length\": \"95\",\n          \"connection\": \"keep-alive\"\n        }\n      },\n      \"journeyTagIds\": [],\n      \"stepId\": 50934,\n      \"requestInfo\": {\n        \"Protocol\": \"https\",\n        \"Method\": \"GET\",\n        \"Time Started - Ended\": \"10:53:16.2 AM - 10:53:16.3 AM\",\n        \"Headers\": \"Host: solutions.tealium.net\\nConnection: keep-alive\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\\nAccept: image/webp,image/apng,image/*,*/*;q=0.8\\nSec-Fetch-Site: same-origin\\nSec-Fetch-Mode: no-cors\\nSec-Fetch-Dest: image\\nReferer: https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\\nAccept-Encoding: gzip, deflate, br\\nAccept-Language: en-US,en;q=0.9\\nCookie: connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Cookies\": \"connect.sid: s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y\\nutag_main: v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\",\n        \"Size\": \"0.0 B\",\n        \"parsedHeaders\": {\n          \"host\": \"solutions.tealium.net\",\n          \"connection\": \"keep-alive\",\n          \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.80 Safari/537.36 Edg/86.0.622.43\",\n          \"accept\": \"image/webp,image/apng,image/*,*/*;q=0.8\",\n          \"sec-fetch-site\": \"same-origin\",\n          \"sec-fetch-mode\": \"no-cors\",\n          \"sec-fetch-dest\": \"image\",\n          \"referer\": \"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-noview.html\",\n          \"accept-encoding\": \"gzip, deflate, br\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cookie\": \"connect.sid=s%3AiSkYA7Czi4KRBdhyyDuaRNKZruhGdfW8.j%2FjG%2B2EgjsfpWWHpIOxhfRlOaJmqQFrcc5ML3Vhwt1Y; utag_main=v_id:017592e37b930002dc05ba56413d03082004a07a00718$_sn:1$_se:1$_ss:1$_st:1604488983255$ses_id:1604487183255%3Bexp-session$_pn:1%3Bexp-session\"\n        }\n      },\n      \"queryParameters\": {\n        \"tagUid\": \"7\",\n        \"_rnd\": \"0.9758409768152962\"\n      },\n      \"requestWithoutQueryString\": \"https://solutions.tealium.net/hosted/i.gif\",\n      \"stepName\": \"step3\"\n    }\n  ]\n}"}],"errorIndex":0,"end":"2020-11-04T10:53:34.601Z"}],"end":"2020-11-04T10:53:34.601Z","duration":15280},{"type":"suite","start":"2020-11-04T10:53:34.601Z","_duration":0,"uid":"suite-0-4","cid":"0-0","title":"VERIFY - check the network logs to make sure the correct tags fired for each step","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step","tests":[{"type":"test","start":"2020-11-04T10:53:34.602Z","_duration":47,"uid":"test-04-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.649Z"},{"type":"test","start":"2020-11-04T10:53:34.649Z","_duration":50,"uid":"test-04-1","cid":"0-0","title":"Step 1 should not fire any tags","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 1 should not fire any tags","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should not fire any tags","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should not fire any tags","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"The noview setting should be respected."}],"errorIndex":0,"end":"2020-11-04T10:53:34.699Z"},{"type":"test","start":"2020-11-04T10:53:34.699Z","_duration":96,"uid":"test-04-2","cid":"0-0","title":"Step 2 should not fire any tags","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 2 should not fire any tags","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not fire any tags","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not fire any tags","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.795Z"},{"type":"test","start":"2020-11-04T10:53:34.795Z","_duration":56,"uid":"test-04-3","cid":"0-0","title":"Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"The virtual view is scoped to tags 6 and 7, but only 7 has implicit consent."}],"errorIndex":0,"end":"2020-11-04T10:53:34.851Z"},{"type":"test","start":"2020-11-04T10:53:34.851Z","_duration":39,"uid":"test-04-4","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 8 was never specified in a virtual view, and there has been no general tracking event."}],"errorIndex":0,"end":"2020-11-04T10:53:34.890Z"},{"type":"test","start":"2020-11-04T10:53:34.890Z","_duration":43,"uid":"test-04-5","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 9 was never specified in a virtual view, and there has been no general tracking event."}],"errorIndex":0,"end":"2020-11-04T10:53:34.933Z"},{"type":"test","start":"2020-11-04T10:53:34.934Z","_duration":46,"uid":"test-04-6","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 10 was never specified in a virtual view, and there has been no general tracking event."}],"errorIndex":0,"end":"2020-11-04T10:53:34.980Z"},{"type":"test","start":"2020-11-04T10:53:34.980Z","_duration":50,"uid":"test-04-7","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 11 is misconfigured, as 'Another Tag', which isn't a configured Service in Usercentrics"}],"errorIndex":0,"end":"2020-11-04T10:53:35.030Z"},{"type":"test","start":"2020-11-04T10:53:35.031Z","_duration":67,"uid":"test-04-8","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T10:53:35.098Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T10:53:34.602Z","_duration":47,"uid":"test-04-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - basic log validation","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.649Z"},{"type":"test","start":"2020-11-04T10:53:34.649Z","_duration":50,"uid":"test-04-1","cid":"0-0","title":"Step 1 should not fire any tags","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 1 should not fire any tags","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should not fire any tags","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 1 should not fire any tags","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"The noview setting should be respected."}],"errorIndex":0,"end":"2020-11-04T10:53:34.699Z"},{"type":"test","start":"2020-11-04T10:53:34.699Z","_duration":96,"uid":"test-04-2","cid":"0-0","title":"Step 2 should not fire any tags","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 2 should not fire any tags","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not fire any tags","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 2 should not fire any tags","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T10:53:34.795Z"},{"type":"test","start":"2020-11-04T10:53:34.795Z","_duration":56,"uid":"test-04-3","cid":"0-0","title":"Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Step 3 should ONLY have fired tags 6 and 7 based on EXPLICIT consent","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"The virtual view is scoped to tags 6 and 7, but only 7 has implicit consent."}],"errorIndex":0,"end":"2020-11-04T10:53:34.851Z"},{"type":"test","start":"2020-11-04T10:53:34.851Z","_duration":39,"uid":"test-04-4","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 8 was never specified in a virtual view, and there has been no general tracking event."}],"errorIndex":0,"end":"2020-11-04T10:53:34.890Z"},{"type":"test","start":"2020-11-04T10:53:34.890Z","_duration":43,"uid":"test-04-5","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 9 was never specified in a virtual view, and there has been no general tracking event."}],"errorIndex":0,"end":"2020-11-04T10:53:34.933Z"},{"type":"test","start":"2020-11-04T10:53:34.934Z","_duration":46,"uid":"test-04-6","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 10 was never specified in a virtual view, and there has been no general tracking event."}],"errorIndex":0,"end":"2020-11-04T10:53:34.980Z"},{"type":"test","start":"2020-11-04T10:53:34.980Z","_duration":50,"uid":"test-04-7","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 11 is misconfigured, as 'Another Tag', which isn't a configured Service in Usercentrics"}],"errorIndex":0,"end":"2020-11-04T10:53:35.030Z"},{"type":"test","start":"2020-11-04T10:53:35.031Z","_duration":67,"uid":"test-04-8","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure the correct tags fired for each step Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure the correct tags fired for each step - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"0379ceb91a1b4223bb4544fb1f863885","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T10:53:35.098Z"}],"end":"2020-11-04T10:53:35.098Z","duration":497}],"title":"Test Report Title","options":{"stdout":true,"outputDir":"./reports/html-reports/","filename":"report.html","templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"reportTitle":"Test Report Title","options":{"logLevel":"warn","outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}},"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}},"showInBrowser":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{}},"logLevel":"warn","debug":true,"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}}}