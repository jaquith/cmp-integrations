{"info":{"type":"runner","start":"2020-11-04T11:09:05.897Z","_duration":55662,"cid":"0-0","capabilities":{"teal:capabilityNumber":2,"teal:runCrossBrowser":true,"teal:enableTrace":false,"moz:headless":false,"moz:webdriverClick":true,"selenium:webdriver.remote.quietExceptions":false,"teal:testContext":"<p>A standard Tealium iQ setup where the TiQ operator has failed to edit utag.loader template (misconfiguration case).</p>\n<p>No tags should fire regardless of user choice, this test confirms the opt-out case.</p>","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"teal:showDurations":true,"teal:opRunId":23244,"teal:testTitle":"Standard TiQ Setup, 'utag loader' Template Edit Missing, User Opts Out","teal:opJourneyId":3962,"rotatable":false,"strictFileInteractability":false,"acceptInsecureCerts":true,"teal:enableProxy":true,"moz:profile":"C:\\Users\\sauce\\AppData\\Local\\Temp\\rust_mozprofileawyr4X","teal:runRemotely":true,"webdriver.remote.sessionid":"1e58bda3-114e-46cd-80c4-2c04cb4fb2be","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","moz:useNonSpecCompliantPointerOrigin":false,"platformName":"windows","unhandledPromptBehavior":"dismiss and notify","teal:hasReporterContext":true,"moz:accessibilityChecks":false,"browserName":"firefox","proxy":{"httpProxy":"13.57.103.60:65056","sslProxy":"13.57.103.60:65056","proxyType":"MANUAL"},"platformVersion":"10.0","moz:processID":5140,"moz:shutdownTimeout":60000,"browserVersion":"82.0","teal:hasRunnerContext":true,"teal:enableSauceConnect":false,"timeouts":{"pageLoad":300000,"implicit":0,"script":30000},"teal:opInitialActionId":50987,"moz:geckodriverVersion":"0.27.0","teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:specPath":"tests/specs/examples/usercentrics-v2/standard_no-utag-edit_opt-out.js","setWindowRect":true,"moz:buildID":"20201014125134","pageLoadStrategy":"normal","sessionId":"20911541e85947e495c3ade648cf75e4"},"sanitizedCapabilities":"firefox.82_0.windows","config":{"protocol":"https","hostname":"ondemand.eu-central-1.saucelabs.com","port":443,"path":"/wd/hub","specs":["tests/specs/examples/usercentrics-v2/standard_no-utag-edit_opt-out.js"],"suites":{},"exclude":[],"logLevel":"warn","logLevels":{},"excludeDriverLogs":[],"bail":0,"waitforInterval":500,"waitforTimeout":20000,"framework":"mocha","reporters":["spec",[null,{"outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}}}]],"services":[["sauce"]],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"connectionRetryTimeout":40000,"connectionRetryCount":2,"execArgv":[],"runnerEnv":{},"runner":"local","mochaOpts":{"timeout":67000,"ui":"bdd","color":true,"retries":0,"specFileRetries":0},"jasmineNodeOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[null],"onWorkerStart":[],"before":[null,null],"beforeSession":[null,null],"beforeSuite":[null,null],"beforeHook":[],"beforeTest":[null,null],"beforeCommand":[],"afterCommand":[],"afterTest":[null],"afterHook":[],"afterSuite":[null],"afterSession":[],"after":[null],"onComplete":[null],"onReload":[null],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"specFileRetries":0,"baseUrl":"","user":"caleb.jaquith","key":"6fab5239-14b0-49cf-8488-21839bd22c08","coloredLogs":true,"screenshotPath":"./errorShots/","host":"https://ondemand.eu-central-1.saucelabs.com","region":"eu","capabilities":[{"browserName":"firefox","browserVersion":"latest","platformName":"Windows 10","teal:enableProxy":true,"teal:enableTrace":false,"teal:runCrossBrowser":true,"teal:runRemotely":true,"teal:showDurations":true,"teal:enableSauceConnect":false,"teal:hasReporterContext":true,"teal:hasRunnerContext":true,"teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","teal:capabilityNumber":2,"sauce:options":{},"teal:specPath":"tests/specs/examples/usercentrics-v2/standard_no-utag-edit_opt-out.js","teal:testContext":"<p>A standard Tealium iQ setup where the TiQ operator has failed to edit utag.loader template (misconfiguration case).</p>\n<p>No tags should fire regardless of user choice, this test confirms the opt-out case.</p>","teal:testTitle":"Standard TiQ Setup, 'utag loader' Template Edit Missing, User Opts Out","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"proxy":{"proxyType":"manual","sslProxy":"13.57.103.60:65056","httpProxy":"13.57.103.60:65056"},"acceptInsecureCerts":true,"teal:opJourneyId":3962,"teal:opRunId":23244,"teal:opInitialActionId":50987}],"sauceConnect":false,"ignoredWorkerServices":[],"specFileRetryAttempts":0},"specs":["/Users/calebjaquith/.git/webdriverio-standalone/tests/specs/examples/usercentrics-v2/standard_no-utag-edit_opt-out.js"],"sessionId":"20911541e85947e495c3ade648cf75e4","isMultiremote":false,"retry":0,"failures":0,"retries":0,"end":"2020-11-04T11:10:01.559Z"},"metrics":{"passed":22,"skipped":0,"failed":0,"start":"2020-11-04T11:09:05.897Z","end":"2020-11-04T11:10:01.559Z","duration":55662},"suites":[{"type":"suite","start":"2020-11-04T11:09:05.902Z","_duration":0,"uid":"suite-0-0","cid":"0-0","title":"STEP 1 - initial visit to test page","fullTitle":"STEP 1 - initial visit to test page","tests":[{"type":"test","start":"2020-11-04T11:09:05.903Z","_duration":8770,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html"},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.172},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.172,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120914.460.png"}],"errorIndex":0,"end":"2020-11-04T11:09:14.673Z"},{"type":"test","start":"2020-11-04T11:09:14.680Z","_duration":88,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:14.768Z"},{"type":"test","start":"2020-11-04T11:09:14.769Z","_duration":6323,"uid":"test-00-2","cid":"0-0","title":"should have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":6.118},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":6.118,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AzKxKocBikfFvvNjAqDyke7O0G0ebMN30.KNB3i2SJ%2FmpkSuUcj3PGsMm1JwlsIazXY%2BQgyfam0Es","sameSite":"None","path":"/","httpOnly":true,"secure":false},{"domain":".tealium.net","name":"utag_main","value":"v_id:017592f255bc00143f4043feb8b80104e005900d00718$_sn:1$_se:1$_ss:1$_st:1604489956606$ses_id:1604488156606%3Bexp-session$_pn:1%3Bexp-session","expiry":1636024156,"sameSite":"None","path":"/","httpOnly":false,"secure":false}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"getCookieByName","result":{"domain":".tealium.net","name":"utag_main","value":"v_id:017592f255bc00143f4043feb8b80104e005900d00718$_sn:1$_se:1$_ss:1$_st:1604489956606$ses_id:1604488156606%3Bexp-session$_pn:1%3Bexp-session","expiry":1636024156,"sameSite":"None","path":"/","httpOnly":false,"secure":false},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"TiQ will run because we can't detect the edit before load, but no tags should be fired."}],"errorIndex":0,"end":"2020-11-04T11:09:21.092Z"},{"type":"test","start":"2020-11-04T11:09:21.093Z","_duration":320,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"c058228c-6122-481c-a45d-47e17ad717e2"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/c058228c-6122-481c-a45d-47e17ad717e2/displayed","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/c058228c-6122-481c-a45d-47e17ad717e2/displayed","body":{},"result":{"value":true},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"c058228c-6122-481c-a45d-47e17ad717e2","ELEMENT":"c058228c-6122-481c-a45d-47e17ad717e2"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"c058228c-6122-481c-a45d-47e17ad717e2","ELEMENT":"c058228c-6122-481c-a45d-47e17ad717e2"}]},"result":{"value":true},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:21.413Z"},{"type":"test","start":"2020-11-04T11:09:21.415Z","_duration":97,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:21.512Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:09:05.903Z","_duration":8770,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html"},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.172},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.172,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-utag-edit.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120914.460.png"}],"errorIndex":0,"end":"2020-11-04T11:09:14.673Z"},{"type":"test","start":"2020-11-04T11:09:14.680Z","_duration":88,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:14.768Z"},{"type":"test","start":"2020-11-04T11:09:14.769Z","_duration":6323,"uid":"test-00-2","cid":"0-0","title":"should have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":6.118},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":6.118,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3AzKxKocBikfFvvNjAqDyke7O0G0ebMN30.KNB3i2SJ%2FmpkSuUcj3PGsMm1JwlsIazXY%2BQgyfam0Es","sameSite":"None","path":"/","httpOnly":true,"secure":false},{"domain":".tealium.net","name":"utag_main","value":"v_id:017592f255bc00143f4043feb8b80104e005900d00718$_sn:1$_se:1$_ss:1$_st:1604489956606$ses_id:1604488156606%3Bexp-session$_pn:1%3Bexp-session","expiry":1636024156,"sameSite":"None","path":"/","httpOnly":false,"secure":false}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"getCookieByName","result":{"domain":".tealium.net","name":"utag_main","value":"v_id:017592f255bc00143f4043feb8b80104e005900d00718$_sn:1$_se:1$_ss:1$_st:1604489956606$ses_id:1604488156606%3Bexp-session$_pn:1%3Bexp-session","expiry":1636024156,"sameSite":"None","path":"/","httpOnly":false,"secure":false},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"TiQ will run because we can't detect the edit before load, but no tags should be fired."}],"errorIndex":0,"end":"2020-11-04T11:09:21.092Z"},{"type":"test","start":"2020-11-04T11:09:21.093Z","_duration":320,"uid":"test-00-3","cid":"0-0","title":"should have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"c058228c-6122-481c-a45d-47e17ad717e2"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/element/c058228c-6122-481c-a45d-47e17ad717e2/displayed","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/element/c058228c-6122-481c-a45d-47e17ad717e2/displayed","body":{},"result":{"value":true},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"c058228c-6122-481c-a45d-47e17ad717e2","ELEMENT":"c058228c-6122-481c-a45d-47e17ad717e2"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function isElementClickable(elem) {\n    if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n        return false;\n    }\n    const isOldEdge = !!window.StyleMedia;\n    const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n    function getOverlappingElement(elem, context) {\n        context = context || document;\n        const elemDimension = elem.getBoundingClientRect();\n        const x = elemDimension.left + (elem.clientWidth / 2);\n        const y = elemDimension.top + (elem.clientHeight / 2);\n        return context.elementFromPoint(x, y);\n    }\n    function getOverlappingRects(elem, context) {\n        context = context || document;\n        const elems = [];\n        const rects = elem.getClientRects();\n        const rect = rects[0];\n        const x = rect.left + (rect.width / 2);\n        const y = rect.top + (rect.height / 2);\n        elems.push(context.elementFromPoint(x, y));\n        return elems;\n    }\n    function getOverlappingElements(elem, context) {\n        return [getOverlappingElement(elem, context)].concat(getOverlappingRects(elem, context));\n    }\n    function nodeContains(elem, otherNode) {\n        if (isOldEdge) {\n            let tmpElement = otherNode;\n            while (tmpElement) {\n                if (tmpElement === elem) {\n                    return true;\n                }\n                tmpElement = tmpElement.parentNode;\n                if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n                    tmpElement = tmpElement.host;\n                }\n            }\n            return false;\n        }\n        return elem.contains(otherNode);\n    }\n    function isOverlappingElementMatch(elementsFromPoint, elem) {\n        if (elementsFromPoint.some(function (elementFromPoint) {\n            return elementFromPoint === elem || nodeContains(elem, elementFromPoint);\n        })) {\n            return true;\n        }\n        let elemsWithShadowRoot = [].concat(elementsFromPoint);\n        elemsWithShadowRoot = elemsWithShadowRoot.filter(function (x) {\n            return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n        });\n        let shadowElementsFromPoint = [];\n        for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n            let shadowElement = elemsWithShadowRoot[i];\n            shadowElementsFromPoint = shadowElementsFromPoint.concat(getOverlappingElements(elem, shadowElement.shadowRoot));\n        }\n        shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n        shadowElementsFromPoint = shadowElementsFromPoint.filter(function (x) {\n            return !elementsFromPoint.includes(x);\n        });\n        if (shadowElementsFromPoint.length === 0) {\n            return false;\n        }\n        return isOverlappingElementMatch(shadowElementsFromPoint, elem);\n    }\n    function isElementInViewport(elem) {\n        if (!elem.getBoundingClientRect) {\n            return false;\n        }\n        const rect = elem.getBoundingClientRect();\n        const windowHeight = (window.innerHeight || document.documentElement.clientHeight);\n        const windowWidth = (window.innerWidth || document.documentElement.clientWidth);\n        const vertInView = (rect.top <= windowHeight) && ((rect.top + rect.height) > 0);\n        const horInView = (rect.left <= windowWidth) && ((rect.left + rect.width) > 0);\n        return (vertInView && horInView);\n    }\n    function isClickable(elem) {\n        return (isElementInViewport(elem) && elem.disabled !== true &&\n            isOverlappingElementMatch(getOverlappingElements(elem), elem));\n    }\n    if (!isClickable(elem)) {\n        elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'nearest', inline: 'nearest' } : false);\n        if (!isClickable(elem)) {\n            elem.scrollIntoView(scrollIntoViewFullSupport ? { block: 'center', inline: 'center' } : true);\n            return isClickable(elem);\n        }\n    }\n    return true;\n}).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"c058228c-6122-481c-a45d-47e17ad717e2","ELEMENT":"c058228c-6122-481c-a45d-47e17ad717e2"}]},"result":{"value":true},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:21.413Z"},{"type":"test","start":"2020-11-04T11:09:21.415Z","_duration":97,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:21.512Z"}],"end":"2020-11-04T11:09:21.512Z","duration":15610},{"type":"suite","start":"2020-11-04T11:09:21.513Z","_duration":0,"uid":"suite-0-1","cid":"0-0","title":"STEP 2 - deny tracking","fullTitle":"STEP 2 - deny tracking","tests":[{"type":"test","start":"2020-11-04T11:09:21.514Z","_duration":5249,"uid":"test-01-0","cid":"0-0","title":"should deny tracking","fullTitle":"STEP 2 - deny tracking should deny tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"31059bf9-82ac-43b6-8a41-afed2f978b46"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/31059bf9-82ac-43b6-8a41-afed2f978b46/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/31059bf9-82ac-43b6-8a41-afed2f978b46/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.14},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.14,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:26.764Z"},{"type":"test","start":"2020-11-04T11:09:26.764Z","_duration":517,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - deny tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":"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AAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAFXlw1UAABwrSURBVAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAAAABAAQQAAAAAUAABAAAAABRAAAAAAAAFEAAA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"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120926.819.png"}],"errorIndex":0,"end":"2020-11-04T11:09:27.282Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:09:21.514Z","_duration":5249,"uid":"test-01-0","cid":"0-0","title":"should deny tracking","fullTitle":"STEP 2 - deny tracking should deny tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should deny tracking","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-deny-all-button\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-deny-all-button\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"31059bf9-82ac-43b6-8a41-afed2f978b46"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/31059bf9-82ac-43b6-8a41-afed2f978b46/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/31059bf9-82ac-43b6-8a41-afed2f978b46/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.14},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.14,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:26.764Z"},{"type":"test","start":"2020-11-04T11:09:26.764Z","_duration":517,"uid":"test-01-1","cid":"0-0","title":"should NOT have a visible Usercentrics banner anymore","fullTitle":"STEP 2 - deny tracking should NOT have a visible Usercentrics banner anymore","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - deny tracking - should NOT have a visible Usercentrics banner anymore","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (function (elem) { return ((function() {\n      // element has a shadowRoot property\n      if (this.shadowRoot) {\n        return this.shadowRoot.querySelector('[data-testid=\"uc-default-banner\"]')\n      }\n      // fall back to querying the element directly if not\n      return this.querySelector('[data-testid=\"uc-default-banner\"]')\n    })).call(elem); }).apply(null, arguments)","args":[{"element-6066-11e4-a52e-4f735466cecf":"71da823a-68fb-49e0-a3ca-940c504ffbb4","ELEMENT":"71da823a-68fb-49e0-a3ca-940c504ffbb4"}]},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"After decision."},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-120926.819.png"}],"errorIndex":0,"end":"2020-11-04T11:09:27.282Z"}],"end":"2020-11-04T11:09:27.282Z","duration":5769},{"type":"suite","start":"2020-11-04T11:09:27.283Z","_duration":0,"uid":"suite-0-2","cid":"0-0","title":"STEP 3 - fire virtual page view by clicking button","fullTitle":"STEP 3 - fire virtual page view by clicking button","tests":[{"type":"test","start":"2020-11-04T11:09:27.283Z","_duration":5186,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9ad1e5d6-3c94-45ff-ab74-46f7f57223c4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/9ad1e5d6-3c94-45ff-ab74-46f7f57223c4/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/9ad1e5d6-3c94-45ff-ab74-46f7f57223c4/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.141},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.141,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:32.470Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:09:27.283Z","_duration":5186,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9ad1e5d6-3c94-45ff-ab74-46f7f57223c4"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/9ad1e5d6-3c94-45ff-ab74-46f7f57223c4/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/9ad1e5d6-3c94-45ff-ab74-46f7f57223c4/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.141},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.141,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:32.470Z"}],"end":"2020-11-04T11:09:32.470Z","duration":5187},{"type":"suite","start":"2020-11-04T11:09:32.470Z","_duration":0,"uid":"suite-0-3","cid":"0-0","title":"STEP 4 - fire virtual page view to tag 10 only by clicking button","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button","tests":[{"type":"test","start":"2020-11-04T11:09:32.470Z","_duration":5512,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"78f2f5d2-f07c-4b34-8624-77f433e085c0"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/78f2f5d2-f07c-4b34-8624-77f433e085c0/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/78f2f5d2-f07c-4b34-8624-77f433e085c0/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.188},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.188,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:37.982Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:09:32.470Z","_duration":5512,"uid":"test-03-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"78f2f5d2-f07c-4b34-8624-77f433e085c0"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/78f2f5d2-f07c-4b34-8624-77f433e085c0/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/78f2f5d2-f07c-4b34-8624-77f433e085c0/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.188},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.188,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:37.982Z"}],"end":"2020-11-04T11:09:37.982Z","duration":5512},{"type":"suite","start":"2020-11-04T11:09:37.982Z","_duration":0,"uid":"suite-0-4","cid":"0-0","title":"STEP 5 - fire virtual page view to tag 11 only","fullTitle":"STEP 5 - fire virtual page view to tag 11 only","tests":[{"type":"test","start":"2020-11-04T11:09:37.983Z","_duration":5064,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"48eb96a3-1750-4904-92d2-4b63df2ba003"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/48eb96a3-1750-4904-92d2-4b63df2ba003/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/48eb96a3-1750-4904-92d2-4b63df2ba003/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.166},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.166,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:43.047Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:09:37.983Z","_duration":5064,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"48eb96a3-1750-4904-92d2-4b63df2ba003"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/48eb96a3-1750-4904-92d2-4b63df2ba003/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/48eb96a3-1750-4904-92d2-4b63df2ba003/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.166},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.166,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:43.047Z"}],"end":"2020-11-04T11:09:43.047Z","duration":5065},{"type":"suite","start":"2020-11-04T11:09:43.048Z","_duration":0,"uid":"suite-0-5","cid":"0-0","title":"STEP 6 - fire virtual page view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only","tests":[{"type":"test","start":"2020-11-04T11:09:43.048Z","_duration":4951,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9d456239-6ba8-47cc-80e6-9c5af0f8208d"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/9d456239-6ba8-47cc-80e6-9c5af0f8208d/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/9d456239-6ba8-47cc-80e6-9c5af0f8208d/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.114},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.114,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:47.999Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:09:43.048Z","_duration":4951,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"9d456239-6ba8-47cc-80e6-9c5af0f8208d"}},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/9d456239-6ba8-47cc-80e6-9c5af0f8208d/click","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/9d456239-6ba8-47cc-80e6-9c5af0f8208d/click","body":{},"result":{"value":null},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.114},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.114,"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:09:47.999Z"}],"end":"2020-11-04T11:09:47.999Z","duration":4951},{"type":"suite","start":"2020-11-04T11:09:48.000Z","_duration":0,"uid":"suite-0-6","cid":"0-0","title":"FINALIZE - get Proxy logs to confirm tag firings","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings","tests":[{"type":"test","start":"2020-11-04T11:09:48.000Z","_duration":12888,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:10:00.888Z"},{"type":"test","start":"2020-11-04T11:10:00.889Z","_duration":47,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:10:00.936Z"},{"type":"test","start":"2020-11-04T11:10:00.936Z","_duration":39,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:10:00.976Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:09:48.000Z","_duration":12888,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:10:00.888Z"},{"type":"test","start":"2020-11-04T11:10:00.889Z","_duration":47,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:10:00.936Z"},{"type":"test","start":"2020-11-04T11:10:00.936Z","_duration":39,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:10:00.976Z"}],"end":"2020-11-04T11:10:00.976Z","duration":12976},{"type":"suite","start":"2020-11-04T11:10:00.976Z","_duration":0,"uid":"suite-0-7","cid":"0-0","title":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","tests":[{"type":"test","start":"2020-11-04T11:10:00.976Z","_duration":47,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:10:01.023Z"},{"type":"test","start":"2020-11-04T11:10:01.023Z","_duration":39,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.062Z"},{"type":"test","start":"2020-11-04T11:10:01.062Z","_duration":44,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.106Z"},{"type":"test","start":"2020-11-04T11:10:01.106Z","_duration":38,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.144Z"},{"type":"test","start":"2020-11-04T11:10:01.145Z","_duration":43,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.188Z"},{"type":"test","start":"2020-11-04T11:10:01.188Z","_duration":36,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.224Z"},{"type":"test","start":"2020-11-04T11:10:01.224Z","_duration":45,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.269Z"},{"type":"test","start":"2020-11-04T11:10:01.269Z","_duration":53,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:10:01.322Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:10:00.976Z","_duration":47,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:10:01.023Z"},{"type":"test","start":"2020-11-04T11:10:01.023Z","_duration":39,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.062Z"},{"type":"test","start":"2020-11-04T11:10:01.062Z","_duration":44,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.106Z"},{"type":"test","start":"2020-11-04T11:10:01.106Z","_duration":38,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.144Z"},{"type":"test","start":"2020-11-04T11:10:01.145Z","_duration":43,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.188Z"},{"type":"test","start":"2020-11-04T11:10:01.188Z","_duration":36,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.224Z"},{"type":"test","start":"2020-11-04T11:10:01.224Z","_duration":45,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:10:01.269Z"},{"type":"test","start":"2020-11-04T11:10:01.269Z","_duration":53,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"20911541e85947e495c3ade648cf75e4","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:10:01.322Z"}],"end":"2020-11-04T11:10:01.322Z","duration":346}],"title":"Test Report Title","options":{"stdout":true,"outputDir":"./reports/html-reports/","filename":"report.html","templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"reportTitle":"Test Report Title","options":{"logLevel":"warn","outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}},"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}},"showInBrowser":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{}},"logLevel":"warn","debug":true,"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}}}