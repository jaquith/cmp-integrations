{"info":{"type":"runner","start":"2020-11-04T11:15:16.056Z","_duration":48303,"cid":"0-0","capabilities":{"teal:capabilityNumber":2,"teal:runCrossBrowser":true,"teal:enableTrace":false,"moz:headless":false,"moz:webdriverClick":true,"selenium:webdriver.remote.quietExceptions":false,"teal:testContext":"<p>A Tealium iQ setup where the Usercentrics CMP has not been added to the page (misconfiguration case, no way for the user to indicate a decision at all).</p>\n<p>No tags should fire.</p>","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"teal:showDurations":true,"teal:opRunId":23248,"teal:testTitle":"Standard TiQ Setup, Usercentrics Missing from Page","teal:opJourneyId":3962,"rotatable":false,"strictFileInteractability":false,"acceptInsecureCerts":true,"teal:enableProxy":true,"moz:profile":"C:\\Users\\sauce\\AppData\\Local\\Temp\\rust_mozprofileEDMxre","teal:runRemotely":true,"webdriver.remote.sessionid":"1f2a6154-4b8d-4c1c-929e-253d58cb4e7a","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","moz:useNonSpecCompliantPointerOrigin":false,"platformName":"windows","unhandledPromptBehavior":"dismiss and notify","teal:hasReporterContext":true,"moz:accessibilityChecks":false,"browserName":"firefox","proxy":{"httpProxy":"13.57.103.60:57550","sslProxy":"13.57.103.60:57550","proxyType":"MANUAL"},"platformVersion":"10.0","moz:processID":5144,"moz:shutdownTimeout":60000,"browserVersion":"82.0","teal:hasRunnerContext":true,"teal:enableSauceConnect":false,"timeouts":{"pageLoad":300000,"implicit":0,"script":30000},"teal:opInitialActionId":51011,"moz:geckodriverVersion":"0.27.0","teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:specPath":"tests/specs/examples/usercentrics-v2/standard_no-usercentrics.js","setWindowRect":true,"moz:buildID":"20201014125134","pageLoadStrategy":"normal","sessionId":"a942e5e6df4f43b4b96e60e8797faad1"},"sanitizedCapabilities":"firefox.82_0.windows","config":{"protocol":"https","hostname":"ondemand.eu-central-1.saucelabs.com","port":443,"path":"/wd/hub","specs":["tests/specs/examples/usercentrics-v2/standard_no-usercentrics.js"],"suites":{},"exclude":[],"logLevel":"warn","logLevels":{},"excludeDriverLogs":[],"bail":0,"waitforInterval":500,"waitforTimeout":20000,"framework":"mocha","reporters":["spec",[null,{"outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}}}]],"services":[["sauce"]],"maxInstances":1,"maxInstancesPerCapability":100,"filesToWatch":[],"connectionRetryTimeout":40000,"connectionRetryCount":2,"execArgv":[],"runnerEnv":{},"runner":"local","mochaOpts":{"timeout":67000,"ui":"bdd","color":true,"retries":0,"specFileRetries":0},"jasmineNodeOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[null],"onWorkerStart":[],"before":[null,null],"beforeSession":[null,null],"beforeSuite":[null,null],"beforeHook":[],"beforeTest":[null,null],"beforeCommand":[],"afterCommand":[],"afterTest":[null],"afterHook":[],"afterSuite":[null],"afterSession":[],"after":[null],"onComplete":[null],"onReload":[null],"beforeFeature":[null],"beforeScenario":[null],"beforeStep":[],"afterStep":[],"afterScenario":[null],"afterFeature":[],"specFileRetries":0,"baseUrl":"","user":"caleb.jaquith","key":"6fab5239-14b0-49cf-8488-21839bd22c08","coloredLogs":true,"screenshotPath":"./errorShots/","host":"https://ondemand.eu-central-1.saucelabs.com","region":"eu","capabilities":[{"browserName":"firefox","browserVersion":"latest","platformName":"Windows 10","teal:enableProxy":true,"teal:enableTrace":false,"teal:runCrossBrowser":true,"teal:runRemotely":true,"teal:showDurations":true,"teal:enableSauceConnect":false,"teal:hasReporterContext":true,"teal:hasRunnerContext":true,"teal:reporterContext":"<p>This report has been generated by Tealium's automated testing platform.</p>\n<p>These tests will have been created specifically for your project by a Tealium Implementation Engineer to verify a configuration or use case.</p>\n<p>The intent is to document the tests run on the completed configuration (acceptance tests). It can also serve as a limited regression test as work continues, to ensure that future projects don't break previous ones.\nFor more information, see the <a href=\"https://jaquith.github.io/webdriverio-standalone/\">developer documentation</a>.</p>","teal:summaryContext":"<p>A suite of tests, intended to ensure the integration between Tealium iQ Tag Management and the Usercentrics Browser SDK (CMP v2) works as expected in multiple potential configuration cases.</p>\n<p>Includes some common error and misconfiguration cases.</p>\n<p>Does not include any TCF support, that setting is not checked.</p>","teal:capabilityNumber":2,"sauce:options":{},"teal:specPath":"tests/specs/examples/usercentrics-v2/standard_no-usercentrics.js","teal:testContext":"<p>A Tealium iQ setup where the Usercentrics CMP has not been added to the page (misconfiguration case, no way for the user to indicate a decision at all).</p>\n<p>No tags should fire.</p>","teal:testTitle":"Standard TiQ Setup, Usercentrics Missing from Page","teal:helpers":["helpers/specific/usercentrics-v2-general-integration-test-helper.js"],"proxy":{"proxyType":"manual","sslProxy":"13.57.103.60:57550","httpProxy":"13.57.103.60:57550"},"acceptInsecureCerts":true,"teal:opJourneyId":3962,"teal:opRunId":23248,"teal:opInitialActionId":51011}],"sauceConnect":false,"ignoredWorkerServices":[],"specFileRetryAttempts":0},"specs":["/Users/calebjaquith/.git/webdriverio-standalone/tests/specs/examples/usercentrics-v2/standard_no-usercentrics.js"],"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","isMultiremote":false,"retry":0,"failures":0,"retries":0,"end":"2020-11-04T11:16:04.359Z"},"metrics":{"passed":21,"skipped":0,"failed":0,"start":"2020-11-04T11:15:16.056Z","end":"2020-11-04T11:16:04.359Z","duration":48303},"suites":[{"type":"suite","start":"2020-11-04T11:15:16.062Z","_duration":0,"uid":"suite-0-0","cid":"0-0","title":"STEP 1 - initial visit to test page","fullTitle":"STEP 1 - initial visit to test page","tests":[{"type":"test","start":"2020-11-04T11:15:16.064Z","_duration":9177,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html"},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.205},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.205,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-121525.027.png"}],"errorIndex":0,"end":"2020-11-04T11:15:25.241Z"},{"type":"test","start":"2020-11-04T11:15:25.248Z","_duration":96,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:25.344Z"},{"type":"test","start":"2020-11-04T11:15:25.345Z","_duration":3366,"uid":"test-00-2","cid":"0-0","title":"should NOT have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should NOT have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.208},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.208,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3A1eLhsQUK9T7ReeIhpeQQiQi12Qzx0Cab.1sZG8%2BTHnTd%2BnHMzOGLjMx13FSoQfGAGmmA9ZAlgTlk","sameSite":"None","path":"/","httpOnly":true,"secure":false}]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"getCookieByName","sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"TiQ isn't even allowed to load"}],"errorIndex":0,"end":"2020-11-04T11:15:28.711Z"},{"type":"test","start":"2020-11-04T11:15:28.712Z","_duration":217,"uid":"test-00-3","cid":"0-0","title":"should NOT have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should NOT have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a visible Usercentrics banner","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"error":"no such element","message":"Unable to locate element: #usercentrics-root","stacktrace":"WebDriverError@chrome://marionette/content/error.js:181:5\nNoSuchElementError@chrome://marionette/content/error.js:393:5\nelement.find/</<@chrome://marionette/content/element.js:332:16\n"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/elements","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/elements","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:28.929Z"},{"type":"test","start":"2020-11-04T11:15:28.930Z","_duration":103,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:29.033Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:15:16.064Z","_duration":9177,"uid":"test-00-0","cid":"0-0","title":"should navigate to the page","fullTitle":"STEP 1 - initial visit to test page should navigate to the page","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should navigate to the page","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/url","body":{"url":"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html"},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"url","result":null,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.205},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.205,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/screenshot","body":{},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"<p>Navigated to <a href=\"https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html\">https://solutions.tealium.net/hosted/usercentrics-v2/test-page-standard-no-usercentrics.html</a></p>"},{"type":"log","value":"On landing"},{"type":"screenshot","value":"reports/html-reports/screenshots/20201104-121525.027.png"}],"errorIndex":0,"end":"2020-11-04T11:15:25.241Z"},{"type":"test","start":"2020-11-04T11:15:25.248Z","_duration":96,"uid":"test-00-1","cid":"0-0","title":"should have the correct title","fullTitle":"STEP 1 - initial visit to test page should have the correct title","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the correct title","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/title","body":{},"result":{"value":"Usercentrics v2 Test"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:25.344Z"},{"type":"test","start":"2020-11-04T11:15:25.345Z","_duration":3366,"uid":"test-00-2","cid":"0-0","title":"should NOT have a utag_main cookie","fullTitle":"STEP 1 - initial visit to test page should NOT have a utag_main cookie","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a utag_main cookie","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.208},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.208,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"GET","endpoint":"/session/:sessionId/cookie","body":{},"result":{"value":[{"domain":"solutions.tealium.net","name":"connect.sid","value":"s%3A1eLhsQUK9T7ReeIhpeQQiQi12Qzx0Cab.1sZG8%2BTHnTd%2BnHMzOGLjMx13FSoQfGAGmmA9ZAlgTlk","sameSite":"None","path":"/","httpOnly":true,"secure":false}]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"getCookieByName","sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"TiQ isn't even allowed to load"}],"errorIndex":0,"end":"2020-11-04T11:15:28.711Z"},{"type":"test","start":"2020-11-04T11:15:28.712Z","_duration":217,"uid":"test-00-3","cid":"0-0","title":"should NOT have a visible Usercentrics banner","fullTitle":"STEP 1 - initial visit to test page should NOT have a visible Usercentrics banner","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a visible Usercentrics banner","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should NOT have a visible Usercentrics banner","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":{"error":"no such element","message":"Unable to locate element: #usercentrics-root","stacktrace":"WebDriverError@chrome://marionette/content/error.js:181:5\nNoSuchElementError@chrome://marionette/content/error.js:393:5\nelement.find/</<@chrome://marionette/content/element.js:332:16\n"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/elements","body":{"using":"css selector","value":"#usercentrics-root"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/elements","body":{"using":"css selector","value":"#usercentrics-root"},"result":{"value":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:28.929Z"},{"type":"test","start":"2020-11-04T11:15:28.930Z","_duration":103,"uid":"test-00-4","cid":"0-0","title":"should have the current version of the Usercentrics integration running","fullTitle":"STEP 1 - initial visit to test page should have the current version of the Usercentrics integration running","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 1 - initial visit to test page - should have the current version of the Usercentrics integration running","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"return (() => {\n      return window.tealiumCmpIntegration && window.tealiumCmpIntegration.version\n    }).apply(null, arguments)","args":[]},"result":{"value":"v0.4-beta"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:29.033Z"}],"end":"2020-11-04T11:15:29.033Z","duration":12971},{"type":"suite","start":"2020-11-04T11:15:29.034Z","_duration":0,"uid":"suite-0-1","cid":"0-0","title":"STEP 2 - (no Usercentrics, so no consent decision)","fullTitle":"STEP 2 - (no Usercentrics, so no consent decision)","tests":[{"type":"test","start":"2020-11-04T11:15:29.034Z","_duration":1943,"uid":"test-01-0","cid":"0-0","title":"(no tracking to deny)","fullTitle":"STEP 2 - (no Usercentrics, so no consent decision) (no tracking to deny)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - (no Usercentrics, so no consent decision) - (no tracking to deny)","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - (no Usercentrics, so no consent decision) - (no tracking to deny)","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:30.978Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:15:29.034Z","_duration":1943,"uid":"test-01-0","cid":"0-0","title":"(no tracking to deny)","fullTitle":"STEP 2 - (no Usercentrics, so no consent decision) (no tracking to deny)","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - (no Usercentrics, so no consent decision) - (no tracking to deny)","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 2 - (no Usercentrics, so no consent decision) - (no tracking to deny)","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:30.978Z"}],"end":"2020-11-04T11:15:30.978Z","duration":1944},{"type":"suite","start":"2020-11-04T11:15:30.979Z","_duration":0,"uid":"suite-0-2","cid":"0-0","title":"STEP 3 - fire virtual page view by clicking button","fullTitle":"STEP 3 - fire virtual page view by clicking button","tests":[{"type":"test","start":"2020-11-04T11:15:30.979Z","_duration":5026,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"eeb86bd8-49e4-47c1-bf3f-972828d2538e"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/eeb86bd8-49e4-47c1-bf3f-972828d2538e/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/eeb86bd8-49e4-47c1-bf3f-972828d2538e/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.14},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.14,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:36.005Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:15:30.979Z","_duration":5026,"uid":"test-02-0","cid":"0-0","title":"should click the button to fire tracking","fullTitle":"STEP 3 - fire virtual page view by clicking button should click the button to fire tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 3 - fire virtual page view by clicking button - should click the button to fire tracking","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#standard-virtual-view"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"eeb86bd8-49e4-47c1-bf3f-972828d2538e"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/eeb86bd8-49e4-47c1-bf3f-972828d2538e/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/eeb86bd8-49e4-47c1-bf3f-972828d2538e/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.14},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.14,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:36.005Z"}],"end":"2020-11-04T11:15:36.005Z","duration":5026},{"type":"suite","start":"2020-11-04T11:15:36.007Z","_duration":0,"uid":"suite-0-3","cid":"0-0","title":"STEP 4 - fire virtual page view to tag 10 only by clicking button","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button","tests":[{"type":"test","start":"2020-11-04T11:15:36.008Z","_duration":5622,"uid":"test-03-0","cid":"0-0","title":"should accept tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should accept tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should accept tracking","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should accept tracking","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"411f6a3b-22a9-4897-b75f-0db99e743335"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/411f6a3b-22a9-4897-b75f-0db99e743335/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/411f6a3b-22a9-4897-b75f-0db99e743335/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.193},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.193,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:41.630Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:15:36.008Z","_duration":5622,"uid":"test-03-0","cid":"0-0","title":"should accept tracking","fullTitle":"STEP 4 - fire virtual page view to tag 10 only by clicking button should accept tracking","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should accept tracking","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 4 - fire virtual page view to tag 10 only by clicking button - should accept tracking","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-10"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"411f6a3b-22a9-4897-b75f-0db99e743335"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/411f6a3b-22a9-4897-b75f-0db99e743335/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/411f6a3b-22a9-4897-b75f-0db99e743335/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.193},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.193,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:41.630Z"}],"end":"2020-11-04T11:15:41.630Z","duration":5623},{"type":"suite","start":"2020-11-04T11:15:41.631Z","_duration":0,"uid":"suite-0-4","cid":"0-0","title":"STEP 5 - fire virtual page view to tag 11 only","fullTitle":"STEP 5 - fire virtual page view to tag 11 only","tests":[{"type":"test","start":"2020-11-04T11:15:41.631Z","_duration":5221,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e1e2c6d0-7e88-444c-be6b-c283acb99cfb"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/e1e2c6d0-7e88-444c-be6b-c283acb99cfb/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/e1e2c6d0-7e88-444c-be6b-c283acb99cfb/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.205},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.205,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:46.853Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:15:41.631Z","_duration":5221,"uid":"test-04-0","cid":"0-0","title":"should fire the virtual view to tag 11","fullTitle":"STEP 5 - fire virtual page view to tag 11 only should fire the virtual view to tag 11","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 5 - fire virtual page view to tag 11 only - should fire the virtual view to tag 11","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"e1e2c6d0-7e88-444c-be6b-c283acb99cfb"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/e1e2c6d0-7e88-444c-be6b-c283acb99cfb/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/e1e2c6d0-7e88-444c-be6b-c283acb99cfb/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.205},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.205,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:46.853Z"}],"end":"2020-11-04T11:15:46.853Z","duration":5222},{"type":"suite","start":"2020-11-04T11:15:46.853Z","_duration":0,"uid":"suite-0-5","cid":"0-0","title":"STEP 6 - fire virtual page view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only","tests":[{"type":"test","start":"2020-11-04T11:15:46.853Z","_duration":5166,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"5f3c9705-954c-4757-87f6-ced925b59b0a"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/5f3c9705-954c-4757-87f6-ced925b59b0a/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/5f3c9705-954c-4757-87f6-ced925b59b0a/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.187},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.187,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:52.019Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:15:46.853Z","_duration":5166,"uid":"test-05-0","cid":"0-0","title":"should fire the virtual view to tags 7 and 11 only","fullTitle":"STEP 6 - fire virtual page view to tags 7 and 11 only should fire the virtual view to tags 7 and 11 only","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=STEP 6 - fire virtual page view to tags 7 and 11 only - should fire the virtual view to tags 7 and 11 only","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element","body":{"using":"css selector","value":"#specific-virtual-view-7-and-11"},"result":{"value":{"element-6066-11e4-a52e-4f735466cecf":"5f3c9705-954c-4757-87f6-ced925b59b0a"}},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/element/5f3c9705-954c-4757-87f6-ced925b59b0a/click","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/element/5f3c9705-954c-4757-87f6-ced925b59b0a/click","body":{},"result":{"value":null},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/async","body":{"script":"return (function (stabilityLength, maxTime, done) {\n      try {\n        const start = Date.now()\n        let lastActivity = start\n        // how long do we need to see inactivity to think all tags fired\n        const timeoutInMillseconds = stabilityLength || 2000\n        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver\n\n        if (MutationObserver) {\n          var mutationObserver = new MutationObserver(function () {\n            lastActivity = Date.now()\n          })\n\n          var inactivityInterval = window.setInterval(function () {\n            const currentTime = Date.now()\n            const currentInactivity = currentTime - lastActivity\n            const totalTime = currentTime - start\n            if (currentInactivity >= timeoutInMillseconds || totalTime >= maxTime) {\n              mutationObserver.disconnect()\n              window.clearInterval(inactivityInterval)\n              done((currentTime - start) / 1000)\n            }\n          }, 200) // polling frequency\n\n          mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true\n          })\n\n          mutationObserver.observe(document.head, {\n            childList: true,\n            subtree: true\n          })\n        } else {\n          const currentTime = Date.now()\n          window.setTimeout(function () { done((currentTime - start) / 1000) }, maxTime / 2) // use half of the maxTime as a fallback for older browsers\n        }\n      } catch (e) {\n        done(e)\n      }\n    }).apply(null, arguments)","args":[3000,20000]},"result":{"value":3.187},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"name":"waitForTraffic","result":3.187,"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:15:52.019Z"}],"end":"2020-11-04T11:15:52.019Z","duration":5166},{"type":"suite","start":"2020-11-04T11:15:52.020Z","_duration":0,"uid":"suite-0-6","cid":"0-0","title":"FINALIZE - get Proxy logs to confirm tag firings","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings","tests":[{"type":"test","start":"2020-11-04T11:15:52.020Z","_duration":11338,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:16:03.359Z"},{"type":"test","start":"2020-11-04T11:16:03.359Z","_duration":132,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:16:03.491Z"},{"type":"test","start":"2020-11-04T11:16:03.491Z","_duration":93,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:16:03.584Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:15:52.020Z","_duration":11338,"uid":"test-06-0","cid":"0-0","title":"finish the run and get the logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings finish the run and get the logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - finish the run and get the logs","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:16:03.359Z"},{"type":"test","start":"2020-11-04T11:16:03.359Z","_duration":132,"uid":"test-06-1","cid":"0-0","title":"should verify step creation in LiveConnect","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should verify step creation in LiveConnect","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should verify step creation in LiveConnect","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:16:03.491Z"},{"type":"test","start":"2020-11-04T11:16:03.491Z","_duration":93,"uid":"test-06-2","cid":"0-0","title":"should generate the filtered logs","fullTitle":"FINALIZE - get Proxy logs to confirm tag firings should generate the filtered logs","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=FINALIZE - get Proxy logs to confirm tag firings - should generate the filtered logs","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"{\n  \"allSteps\": [],\n  \"step1\": [],\n  \"step2\": [],\n  \"step3\": [],\n  \"step4\": [],\n  \"step5\": [],\n  \"step6\": []\n}"}],"errorIndex":0,"end":"2020-11-04T11:16:03.584Z"}],"end":"2020-11-04T11:16:03.584Z","duration":11564},{"type":"suite","start":"2020-11-04T11:16:03.585Z","_duration":0,"uid":"suite-0-7","cid":"0-0","title":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test.","tests":[{"type":"test","start":"2020-11-04T11:16:03.585Z","_duration":55,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:16:03.640Z"},{"type":"test","start":"2020-11-04T11:16:03.640Z","_duration":145,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.785Z"},{"type":"test","start":"2020-11-04T11:16:03.785Z","_duration":46,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.831Z"},{"type":"test","start":"2020-11-04T11:16:03.831Z","_duration":66,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.898Z"},{"type":"test","start":"2020-11-04T11:16:03.898Z","_duration":58,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.956Z"},{"type":"test","start":"2020-11-04T11:16:03.956Z","_duration":66,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:04.022Z"},{"type":"test","start":"2020-11-04T11:16:04.024Z","_duration":45,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:04.069Z"},{"type":"test","start":"2020-11-04T11:16:04.069Z","_duration":59,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:16:04.128Z"}],"hooks":[],"suites":[],"hooksAndTests":[{"type":"test","start":"2020-11-04T11:16:03.585Z","_duration":55,"uid":"test-07-0","cid":"0-0","title":"basic log validation","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. basic log validation","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - basic log validation","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[],"errorIndex":0,"end":"2020-11-04T11:16:03.640Z"},{"type":"test","start":"2020-11-04T11:16:03.640Z","_duration":145,"uid":"test-07-1","cid":"0-0","title":"Tag 6 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 6 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 6 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.785Z"},{"type":"test","start":"2020-11-04T11:16:03.785Z","_duration":46,"uid":"test-07-2","cid":"0-0","title":"Tag 7 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 7 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 7 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.831Z"},{"type":"test","start":"2020-11-04T11:16:03.831Z","_duration":66,"uid":"test-07-3","cid":"0-0","title":"Tag 8 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 8 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 8 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.898Z"},{"type":"test","start":"2020-11-04T11:16:03.898Z","_duration":58,"uid":"test-07-4","cid":"0-0","title":"Tag 9 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 9 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 9 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:03.956Z"},{"type":"test","start":"2020-11-04T11:16:03.956Z","_duration":66,"uid":"test-07-5","cid":"0-0","title":"Tag 10 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 10 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 10 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:04.022Z"},{"type":"test","start":"2020-11-04T11:16:04.024Z","_duration":45,"uid":"test-07-6","cid":"0-0","title":"Tag 11 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 11 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 11 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Missing map should mean that no tags fire, no matter what."}],"errorIndex":0,"end":"2020-11-04T11:16:04.069Z"},{"type":"test","start":"2020-11-04T11:16:04.069Z","_duration":59,"uid":"test-07-7","cid":"0-0","title":"Tag 15 should NOT have fired at any point in this test","fullTitle":"VERIFY - check the network logs to make sure no tags fired at any point in this test. Tag 15 should NOT have fired at any point in this test","output":[{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"POST","endpoint":"/session/:sessionId/execute/sync","body":{"script":"sauce:context=VERIFY - check the network logs to make sure no tags fired at any point in this test. - Tag 15 should NOT have fired at any point in this test","args":[]},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"command"},{"method":"DELETE","endpoint":"/session/:sessionId","body":{},"result":{"value":""},"sessionId":"a942e5e6df4f43b4b96e60e8797faad1","cid":"0-0","type":"result"}],"retries":0,"state":"passed","events":[{"type":"log","value":"Tag 15 is not configured in the mapping, so it should never fire"}],"errorIndex":0,"end":"2020-11-04T11:16:04.128Z"}],"end":"2020-11-04T11:16:04.128Z","duration":543}],"title":"Test Report Title","options":{"stdout":true,"outputDir":"./reports/html-reports/","filename":"report.html","templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"reportTitle":"Test Report Title","options":{"logLevel":"warn","outputDir":"./reports/html-reports/","filename":"report.html","showInBrowser":false,"useOnAfterCommandForScreenshot":false,"debug":true,"templateFilename":"/Users/calebjaquith/.git/webdriverio-standalone/report-templates/single-template.hbs","templateFuncs":{},"LOG":{"category":"default","context":{}},"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}},"showInBrowser":false,"useOnAfterCommandForScreenshot":false,"LOG":{"category":"default","context":{}},"logLevel":"warn","debug":true,"logFile":"reports/html-reports/wdio-0-0-HtmlReporter-reporter.log","writeStream":{}}}